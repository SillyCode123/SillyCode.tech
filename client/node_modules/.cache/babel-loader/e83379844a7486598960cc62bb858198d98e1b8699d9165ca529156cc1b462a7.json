{"ast":null,"code":"import { Buffer } from 'node:buffer';\nimport { ReadableWebToNodeStream } from 'readable-web-to-node-stream';\nimport { fileTypeFromBuffer, fileTypeFromStream as coreFileTypeFromStream } from './core.js';\n\n/**\nConvert Blobs to ArrayBuffer.\n\n@param {Blob} blob - Web API Blob.\n@returns {Promise<ArrayBuffer>}\n*/\nfunction blobToArrayBuffer(blob) {\n  if (blob.arrayBuffer) {\n    return blob.arrayBuffer();\n  }\n\n  // TODO: Remove when stop supporting older environments\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.addEventListener('loadend', event => {\n      resolve(event.target.result);\n    });\n    fileReader.addEventListener('error', event => {\n      reject(new Error(event.message));\n    });\n    fileReader.addEventListener('abort', event => {\n      reject(new Error(event.type));\n    });\n    fileReader.readAsArrayBuffer(blob);\n  });\n}\nexport async function fileTypeFromStream(stream) {\n  const readableWebToNodeStream = new ReadableWebToNodeStream(stream);\n  const fileType = await coreFileTypeFromStream(readableWebToNodeStream);\n  await readableWebToNodeStream.close();\n  return fileType;\n}\nexport async function fileTypeFromBlob(blob) {\n  const buffer = await blobToArrayBuffer(blob);\n  return fileTypeFromBuffer(Buffer.from(buffer));\n}\nexport { fileTypeFromTokenizer, fileTypeFromBuffer, fileTypeStream } from './core.js';","map":{"version":3,"names":["Buffer","ReadableWebToNodeStream","fileTypeFromBuffer","fileTypeFromStream","coreFileTypeFromStream","blobToArrayBuffer","blob","arrayBuffer","Promise","resolve","reject","fileReader","FileReader","addEventListener","event","target","result","Error","message","type","readAsArrayBuffer","stream","readableWebToNodeStream","fileType","close","fileTypeFromBlob","buffer","from","fileTypeFromTokenizer","fileTypeStream"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/file-type/browser.js"],"sourcesContent":["import {Buffer} from 'node:buffer';\nimport {ReadableWebToNodeStream} from 'readable-web-to-node-stream';\nimport {fileTypeFromBuffer, fileTypeFromStream as coreFileTypeFromStream} from './core.js';\n\n/**\nConvert Blobs to ArrayBuffer.\n\n@param {Blob} blob - Web API Blob.\n@returns {Promise<ArrayBuffer>}\n*/\nfunction blobToArrayBuffer(blob) {\n\tif (blob.arrayBuffer) {\n\t\treturn blob.arrayBuffer();\n\t}\n\n\t// TODO: Remove when stop supporting older environments\n\treturn new Promise((resolve, reject) => {\n\t\tconst fileReader = new FileReader();\n\t\tfileReader.addEventListener('loadend', event => {\n\t\t\tresolve(event.target.result);\n\t\t});\n\n\t\tfileReader.addEventListener('error', event => {\n\t\t\treject(new Error(event.message));\n\t\t});\n\n\t\tfileReader.addEventListener('abort', event => {\n\t\t\treject(new Error(event.type));\n\t\t});\n\n\t\tfileReader.readAsArrayBuffer(blob);\n\t});\n}\n\nexport async function fileTypeFromStream(stream) {\n\tconst readableWebToNodeStream = new ReadableWebToNodeStream(stream);\n\tconst fileType = await coreFileTypeFromStream(readableWebToNodeStream);\n\tawait readableWebToNodeStream.close();\n\treturn fileType;\n}\n\nexport async function fileTypeFromBlob(blob) {\n\tconst buffer = await blobToArrayBuffer(blob);\n\treturn fileTypeFromBuffer(Buffer.from(buffer));\n}\n\nexport {\n\tfileTypeFromTokenizer,\n\tfileTypeFromBuffer,\n\tfileTypeStream,\n} from './core.js';\n"],"mappings":"AAAA,SAAQA,MAAM,QAAO,aAAa;AAClC,SAAQC,uBAAuB,QAAO,6BAA6B;AACnE,SAAQC,kBAAkB,EAAEC,kBAAkB,IAAIC,sBAAsB,QAAO,WAAW;;AAE1F;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,iBAAiB,CAACC,IAAI,EAAE;EAChC,IAAIA,IAAI,CAACC,WAAW,EAAE;IACrB,OAAOD,IAAI,CAACC,WAAW,EAAE;EAC1B;;EAEA;EACA,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACvC,MAAMC,UAAU,GAAG,IAAIC,UAAU,EAAE;IACnCD,UAAU,CAACE,gBAAgB,CAAC,SAAS,EAAEC,KAAK,IAAI;MAC/CL,OAAO,CAACK,KAAK,CAACC,MAAM,CAACC,MAAM,CAAC;IAC7B,CAAC,CAAC;IAEFL,UAAU,CAACE,gBAAgB,CAAC,OAAO,EAAEC,KAAK,IAAI;MAC7CJ,MAAM,CAAC,IAAIO,KAAK,CAACH,KAAK,CAACI,OAAO,CAAC,CAAC;IACjC,CAAC,CAAC;IAEFP,UAAU,CAACE,gBAAgB,CAAC,OAAO,EAAEC,KAAK,IAAI;MAC7CJ,MAAM,CAAC,IAAIO,KAAK,CAACH,KAAK,CAACK,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC;IAEFR,UAAU,CAACS,iBAAiB,CAACd,IAAI,CAAC;EACnC,CAAC,CAAC;AACH;AAEA,OAAO,eAAeH,kBAAkB,CAACkB,MAAM,EAAE;EAChD,MAAMC,uBAAuB,GAAG,IAAIrB,uBAAuB,CAACoB,MAAM,CAAC;EACnE,MAAME,QAAQ,GAAG,MAAMnB,sBAAsB,CAACkB,uBAAuB,CAAC;EACtE,MAAMA,uBAAuB,CAACE,KAAK,EAAE;EACrC,OAAOD,QAAQ;AAChB;AAEA,OAAO,eAAeE,gBAAgB,CAACnB,IAAI,EAAE;EAC5C,MAAMoB,MAAM,GAAG,MAAMrB,iBAAiB,CAACC,IAAI,CAAC;EAC5C,OAAOJ,kBAAkB,CAACF,MAAM,CAAC2B,IAAI,CAACD,MAAM,CAAC,CAAC;AAC/C;AAEA,SACCE,qBAAqB,EACrB1B,kBAAkB,EAClB2B,cAAc,QACR,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}