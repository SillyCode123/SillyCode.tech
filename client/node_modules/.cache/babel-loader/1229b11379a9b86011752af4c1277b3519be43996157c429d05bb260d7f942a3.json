{"ast":null,"code":"'use strict';\n\nconst Webhook = require('./Webhook');\n\n/**\n * Represents a webhook for an Interaction\n * @implements {Webhook}\n */\nclass InteractionWebhook {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {Snowflake} id The application's id\n   * @param {string} token The interaction's token\n   */\n  constructor(client, id, token) {\n    /**\n     * The client that instantiated the interaction webhook\n     * @name InteractionWebhook#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', {\n      value: client\n    });\n    this.id = id;\n    Object.defineProperty(this, 'token', {\n      value: token,\n      writable: true,\n      configurable: true\n    });\n  }\n\n  // These are here only for documentation purposes - they are implemented by Webhook\n  /* eslint-disable no-empty-function */\n  /**\n   * Sends a message with this webhook.\n   * @param {string|MessagePayload|InteractionReplyOptions} options The content for the reply\n   * @returns {Promise<Message>}\n   */\n\n  send() {}\n\n  /**\n   * Gets a message that was sent by this webhook.\n   * @param {Snowflake|'@original'} message The id of the message to fetch\n   * @returns {Promise<Message>} Returns the message sent by this webhook\n   */\n\n  fetchMessage() {}\n\n  /**\n   * Edits a message that was sent by this webhook.\n   * @param {MessageResolvable|'@original'} message The message to edit\n   * @param {string|MessagePayload|WebhookEditMessageOptions} options The options to provide\n   * @returns {Promise<Message>} Returns the message edited by this webhook\n   */\n\n  editMessage() {}\n  deleteMessage() {}\n  get url() {}\n}\nWebhook.applyToClass(InteractionWebhook, ['sendSlackMessage', 'edit', 'delete', 'createdTimestamp', 'createdAt']);\nmodule.exports = InteractionWebhook;","map":{"version":3,"names":["Webhook","require","InteractionWebhook","constructor","client","id","token","Object","defineProperty","value","writable","configurable","send","fetchMessage","editMessage","deleteMessage","url","applyToClass","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/structures/InteractionWebhook.js"],"sourcesContent":["'use strict';\n\nconst Webhook = require('./Webhook');\n\n/**\n * Represents a webhook for an Interaction\n * @implements {Webhook}\n */\nclass InteractionWebhook {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {Snowflake} id The application's id\n   * @param {string} token The interaction's token\n   */\n  constructor(client, id, token) {\n    /**\n     * The client that instantiated the interaction webhook\n     * @name InteractionWebhook#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n    this.id = id;\n    Object.defineProperty(this, 'token', { value: token, writable: true, configurable: true });\n  }\n\n  // These are here only for documentation purposes - they are implemented by Webhook\n  /* eslint-disable no-empty-function */\n  /**\n   * Sends a message with this webhook.\n   * @param {string|MessagePayload|InteractionReplyOptions} options The content for the reply\n   * @returns {Promise<Message>}\n   */\n\n  send() {}\n\n  /**\n   * Gets a message that was sent by this webhook.\n   * @param {Snowflake|'@original'} message The id of the message to fetch\n   * @returns {Promise<Message>} Returns the message sent by this webhook\n   */\n\n  fetchMessage() {}\n\n  /**\n   * Edits a message that was sent by this webhook.\n   * @param {MessageResolvable|'@original'} message The message to edit\n   * @param {string|MessagePayload|WebhookEditMessageOptions} options The options to provide\n   * @returns {Promise<Message>} Returns the message edited by this webhook\n   */\n\n  editMessage() {}\n  deleteMessage() {}\n  get url() {}\n}\n\nWebhook.applyToClass(InteractionWebhook, ['sendSlackMessage', 'edit', 'delete', 'createdTimestamp', 'createdAt']);\n\nmodule.exports = InteractionWebhook;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAEpC;AACA;AACA;AACA;AACA,MAAMC,kBAAkB,CAAC;EACvB;AACF;AACA;AACA;AACA;EACEC,WAAW,CAACC,MAAM,EAAEC,EAAE,EAAEC,KAAK,EAAE;IAC7B;AACJ;AACA;AACA;AACA;AACA;IACIC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE;MAAEC,KAAK,EAAEL;IAAO,CAAC,CAAC;IACxD,IAAI,CAACC,EAAE,GAAGA,EAAE;IACZE,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE;MAAEC,KAAK,EAAEH,KAAK;MAAEI,QAAQ,EAAE,IAAI;MAAEC,YAAY,EAAE;IAAK,CAAC,CAAC;EAC5F;;EAEA;EACA;EACA;AACF;AACA;AACA;AACA;;EAEEC,IAAI,GAAG,CAAC;;EAER;AACF;AACA;AACA;AACA;;EAEEC,YAAY,GAAG,CAAC;;EAEhB;AACF;AACA;AACA;AACA;AACA;;EAEEC,WAAW,GAAG,CAAC;EACfC,aAAa,GAAG,CAAC;EACjB,IAAIC,GAAG,GAAG,CAAC;AACb;AAEAhB,OAAO,CAACiB,YAAY,CAACf,kBAAkB,EAAE,CAAC,kBAAkB,EAAE,MAAM,EAAE,QAAQ,EAAE,kBAAkB,EAAE,WAAW,CAAC,CAAC;AAEjHgB,MAAM,CAACC,OAAO,GAAGjB,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}