{"ast":null,"code":"'use strict';\n\nconst {\n  ChannelFlags\n} = require('discord-api-types/v10');\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link BaseChannel#flags} bitfield.\n * @extends {BitField}\n */\nclass ChannelFlagsBitField extends BitField {\n  /**\n   * Numeric guild channel flags.\n   * @type {ChannelFlags}\n   * @memberof ChannelFlagsBitField\n   */\n  static Flags = ChannelFlags;\n}\n\n/**\n * @name ChannelFlagsBitField\n * @kind constructor\n * @memberof ChannelFlagsBitField\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name ChannelFlagsBitField#bitfield\n */\n\n/**\n * Data that can be resolved to give a channel flag bitfield. This can be:\n * * A string (see {@link ChannelFlagsBitField.Flags})\n * * A channel flag\n * * An instance of ChannelFlagsBitField\n * * An Array of ChannelFlagsResolvable\n * @typedef {string|number|ChannelFlagsBitField|ChannelFlagsResolvable[]} ChannelFlagsResolvable\n */\n\nmodule.exports = ChannelFlagsBitField;","map":{"version":3,"names":["ChannelFlags","require","BitField","ChannelFlagsBitField","Flags","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/util/ChannelFlagsBitField.js"],"sourcesContent":["'use strict';\n\nconst { ChannelFlags } = require('discord-api-types/v10');\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link BaseChannel#flags} bitfield.\n * @extends {BitField}\n */\nclass ChannelFlagsBitField extends BitField {\n  /**\n   * Numeric guild channel flags.\n   * @type {ChannelFlags}\n   * @memberof ChannelFlagsBitField\n   */\n  static Flags = ChannelFlags;\n}\n\n/**\n * @name ChannelFlagsBitField\n * @kind constructor\n * @memberof ChannelFlagsBitField\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name ChannelFlagsBitField#bitfield\n */\n\n/**\n * Data that can be resolved to give a channel flag bitfield. This can be:\n * * A string (see {@link ChannelFlagsBitField.Flags})\n * * A channel flag\n * * An instance of ChannelFlagsBitField\n * * An Array of ChannelFlagsResolvable\n * @typedef {string|number|ChannelFlagsBitField|ChannelFlagsResolvable[]} ChannelFlagsResolvable\n */\n\nmodule.exports = ChannelFlagsBitField;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAa,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACzD,MAAMC,QAAQ,GAAGD,OAAO,CAAC,YAAY,CAAC;;AAEtC;AACA;AACA;AACA;AACA,MAAME,oBAAoB,SAASD,QAAQ,CAAC;EAC1C;AACF;AACA;AACA;AACA;EACE,OAAOE,KAAK,GAAGJ,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAK,MAAM,CAACC,OAAO,GAAGH,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}