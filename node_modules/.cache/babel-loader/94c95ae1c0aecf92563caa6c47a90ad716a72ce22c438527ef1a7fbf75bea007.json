{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isContextMenuApplicationCommandInteraction = exports.isChatInputApplicationCommandInteraction = exports.isMessageComponentSelectMenuInteraction = exports.isMessageComponentButtonInteraction = exports.isMessageComponentInteraction = exports.isInteractionButton = exports.isLinkButton = exports.isMessageComponentGuildInteraction = exports.isMessageComponentDMInteraction = exports.isApplicationCommandGuildInteraction = exports.isApplicationCommandDMInteraction = exports.isGuildInteraction = exports.isDMInteraction = void 0;\nconst index_1 = require(\"../payloads/v10/index\");\n// Interactions\n/**\n * A type-guard check for DM interactions\n * @param interaction The interaction to check against\n * @returns A boolean that indicates if the interaction was received in a DM channel\n */\nfunction isDMInteraction(interaction) {\n  return Reflect.has(interaction, 'user');\n}\nexports.isDMInteraction = isDMInteraction;\n/**\n * A type-guard check for guild interactions\n * @param interaction The interaction to check against\n * @returns A boolean that indicates if the interaction was received in a guild\n */\nfunction isGuildInteraction(interaction) {\n  return Reflect.has(interaction, 'guild_id');\n}\nexports.isGuildInteraction = isGuildInteraction;\n// ApplicationCommandInteractions\n/**\n * A type-guard check for DM application command interactions\n * @param interaction The application command interaction to check against\n * @returns A boolean that indicates if the application command interaction was received in a DM channel\n */\nfunction isApplicationCommandDMInteraction(interaction) {\n  return isDMInteraction(interaction);\n}\nexports.isApplicationCommandDMInteraction = isApplicationCommandDMInteraction;\n/**\n * A type-guard check for guild application command interactions\n * @param interaction The interaction to check against\n * @returns A boolean that indicates if the application command interaction was received in a guild\n */\nfunction isApplicationCommandGuildInteraction(interaction) {\n  return isGuildInteraction(interaction);\n}\nexports.isApplicationCommandGuildInteraction = isApplicationCommandGuildInteraction;\n// MessageComponentInteractions\n/**\n * A type-guard check for DM message component interactions\n * @param interaction The message component interaction to check against\n * @returns A boolean that indicates if the message component interaction was received in a DM channel\n */\nfunction isMessageComponentDMInteraction(interaction) {\n  return isDMInteraction(interaction);\n}\nexports.isMessageComponentDMInteraction = isMessageComponentDMInteraction;\n/**\n * A type-guard check for guild message component interactions\n * @param interaction The interaction to check against\n * @returns A boolean that indicates if the message component interaction was received in a guild\n */\nfunction isMessageComponentGuildInteraction(interaction) {\n  return isGuildInteraction(interaction);\n}\nexports.isMessageComponentGuildInteraction = isMessageComponentGuildInteraction;\n// Buttons\n/**\n * A type-guard check for buttons that have a `url` attached to them.\n * @param component The button to check against\n * @returns A boolean that indicates if the button has a `url` attached to it\n */\nfunction isLinkButton(component) {\n  return component.style === index_1.ButtonStyle.Link;\n}\nexports.isLinkButton = isLinkButton;\n/**\n * A type-guard check for buttons that have a `custom_id` attached to them.\n * @param button The button to check against\n * @returns A boolean that indicates if the button has a `custom_id` attached to it\n */\nfunction isInteractionButton(component) {\n  return component.style !== index_1.ButtonStyle.Link;\n}\nexports.isInteractionButton = isInteractionButton;\n// Message Components\n/**\n * A type-guard check for message component interactions\n * @param interaction The interaction to check against\n * @returns A boolean that indicates if the interaction is a message component\n */\nfunction isMessageComponentInteraction(interaction) {\n  return interaction.type === index_1.InteractionType.MessageComponent;\n}\nexports.isMessageComponentInteraction = isMessageComponentInteraction;\n/**\n * A type-guard check for button message component interactions\n * @param interaction The message component interaction to check against\n * @returns A boolean that indicates if the message component is a button\n */\nfunction isMessageComponentButtonInteraction(interaction) {\n  return interaction.data.component_type === index_1.ComponentType.Button;\n}\nexports.isMessageComponentButtonInteraction = isMessageComponentButtonInteraction;\n/**\n * A type-guard check for select menu message component interactions\n * @param interaction The message component interaction to check against\n * @returns A boolean that indicates if the message component is a select menu\n */\nfunction isMessageComponentSelectMenuInteraction(interaction) {\n  return [index_1.ComponentType.StringSelect, index_1.ComponentType.UserSelect, index_1.ComponentType.RoleSelect, index_1.ComponentType.MentionableSelect, index_1.ComponentType.ChannelSelect].includes(interaction.data.component_type);\n}\nexports.isMessageComponentSelectMenuInteraction = isMessageComponentSelectMenuInteraction;\n// Application Commands\n/**\n * A type-guard check for chat input application commands.\n * @param interaction The interaction to check against\n * @returns A boolean that indicates if the interaction is a chat input application command\n */\nfunction isChatInputApplicationCommandInteraction(interaction) {\n  return interaction.data.type === index_1.ApplicationCommandType.ChatInput;\n}\nexports.isChatInputApplicationCommandInteraction = isChatInputApplicationCommandInteraction;\n/**\n * A type-guard check for context menu application commands.\n * @param interaction The interaction to check against\n * @returns A boolean that indicates if the interaction is a context menu application command\n */\nfunction isContextMenuApplicationCommandInteraction(interaction) {\n  return interaction.data.type === index_1.ApplicationCommandType.Message || interaction.data.type === index_1.ApplicationCommandType.User;\n}\nexports.isContextMenuApplicationCommandInteraction = isContextMenuApplicationCommandInteraction;","map":{"version":3,"mappings":";;;;;;AAAA;AAuBA;AAEA;;;;;AAKA,SAAgBA,eAAe,CAACC,WAA2B;EAC1D,OAAOC,OAAO,CAACC,GAAG,CAACF,WAAW,EAAE,MAAM,CAAC;AACxC;AAFAG;AAIA;;;;;AAKA,SAAgBC,kBAAkB,CAACJ,WAA2B;EAC7D,OAAOC,OAAO,CAACC,GAAG,CAACF,WAAW,EAAE,UAAU,CAAC;AAC5C;AAFAG;AAIA;AAEA;;;;;AAKA,SAAgBE,iCAAiC,CAChDL,WAA6C;EAE7C,OAAOD,eAAe,CAACC,WAAW,CAAC;AACpC;AAJAG;AAMA;;;;;AAKA,SAAgBG,oCAAoC,CACnDN,WAA6C;EAE7C,OAAOI,kBAAkB,CAACJ,WAAW,CAAC;AACvC;AAJAG;AAMA;AAEA;;;;;AAKA,SAAgBI,+BAA+B,CAC9CP,WAA2C;EAE3C,OAAOD,eAAe,CAACC,WAAW,CAAC;AACpC;AAJAG;AAMA;;;;;AAKA,SAAgBK,kCAAkC,CACjDR,WAA2C;EAE3C,OAAOI,kBAAkB,CAACJ,WAAW,CAAC;AACvC;AAJAG;AAMA;AAEA;;;;;AAKA,SAAgBM,YAAY,CAACC,SAA6B;EACzD,OAAOA,SAAS,CAACC,KAAK,KAAKC,mBAAW,CAACC,IAAI;AAC5C;AAFAV;AAIA;;;;;AAKA,SAAgBW,mBAAmB,CAACJ,SAA6B;EAChE,OAAOA,SAAS,CAACC,KAAK,KAAKC,mBAAW,CAACC,IAAI;AAC5C;AAFAV;AAIA;AAEA;;;;;AAKA,SAAgBY,6BAA6B,CAC5Cf,WAA2B;EAE3B,OAAOA,WAAW,CAACgB,IAAI,KAAKJ,uBAAe,CAACK,gBAAgB;AAC7D;AAJAd;AAMA;;;;;AAKA,SAAgBe,mCAAmC,CAClDlB,WAA2C;EAE3C,OAAOA,WAAW,CAACmB,IAAI,CAACC,cAAc,KAAKR,qBAAa,CAACS,MAAM;AAChE;AAJAlB;AAMA;;;;;AAKA,SAAgBmB,uCAAuC,CACtDtB,WAA2C;EAE3C,OAAO,CACNY,qBAAa,CAACW,YAAY,EAC1BX,qBAAa,CAACY,UAAU,EACxBZ,qBAAa,CAACa,UAAU,EACxBb,qBAAa,CAACc,iBAAiB,EAC/Bd,qBAAa,CAACe,aAAa,CAC3B,CAACC,QAAQ,CAAC5B,WAAW,CAACmB,IAAI,CAACC,cAAc,CAAC;AAC5C;AAVAjB;AAYA;AAEA;;;;;AAKA,SAAgB0B,wCAAwC,CACvD7B,WAA6C;EAE7C,OAAOA,WAAW,CAACmB,IAAI,CAACH,IAAI,KAAKJ,8BAAsB,CAACkB,SAAS;AAClE;AAJA3B;AAMA;;;;;AAKA,SAAgB4B,0CAA0C,CACzD/B,WAA6C;EAE7C,OACCA,WAAW,CAACmB,IAAI,CAACH,IAAI,KAAKJ,8BAAsB,CAACoB,OAAO,IAAIhC,WAAW,CAACmB,IAAI,CAACH,IAAI,KAAKJ,8BAAsB,CAACqB,IAAI;AAEnH;AANA9B","names":["isDMInteraction","interaction","Reflect","has","exports","isGuildInteraction","isApplicationCommandDMInteraction","isApplicationCommandGuildInteraction","isMessageComponentDMInteraction","isMessageComponentGuildInteraction","isLinkButton","component","style","index_1","Link","isInteractionButton","isMessageComponentInteraction","type","MessageComponent","isMessageComponentButtonInteraction","data","component_type","Button","isMessageComponentSelectMenuInteraction","StringSelect","UserSelect","RoleSelect","MentionableSelect","ChannelSelect","includes","isChatInputApplicationCommandInteraction","ChatInput","isContextMenuApplicationCommandInteraction","Message","User"],"sources":["v10.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}