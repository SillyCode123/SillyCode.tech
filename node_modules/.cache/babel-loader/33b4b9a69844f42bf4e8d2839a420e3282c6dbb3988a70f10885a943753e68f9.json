{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\nclass UserUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const newUser = data.id === client.user.id ? client.user : client.users.cache.get(data.id);\n    const oldUser = newUser._update(data);\n    if (!oldUser.equals(newUser)) {\n      /**\n       * Emitted whenever a user's details (e.g. username) are changed.\n       * Triggered by the Discord gateway events {@link Events.UserUpdate},\n       * {@link Events.GuildMemberUpdate}, and {@link Events.PresenceUpdate}.\n       * @event Client#userUpdate\n       * @param {User} oldUser The user before the update\n       * @param {User} newUser The user after the update\n       */\n      client.emit(Events.UserUpdate, oldUser, newUser);\n      return {\n        old: oldUser,\n        updated: newUser\n      };\n    }\n    return {\n      old: null,\n      updated: null\n    };\n  }\n}\nmodule.exports = UserUpdateAction;","map":{"version":3,"names":["Action","require","Events","UserUpdateAction","handle","data","client","newUser","id","user","users","cache","get","oldUser","_update","equals","emit","UserUpdate","old","updated","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/client/actions/UserUpdate.js"],"sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass UserUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const newUser = data.id === client.user.id ? client.user : client.users.cache.get(data.id);\n    const oldUser = newUser._update(data);\n\n    if (!oldUser.equals(newUser)) {\n      /**\n       * Emitted whenever a user's details (e.g. username) are changed.\n       * Triggered by the Discord gateway events {@link Events.UserUpdate},\n       * {@link Events.GuildMemberUpdate}, and {@link Events.PresenceUpdate}.\n       * @event Client#userUpdate\n       * @param {User} oldUser The user before the update\n       * @param {User} newUser The user after the update\n       */\n      client.emit(Events.UserUpdate, oldUser, newUser);\n      return {\n        old: oldUser,\n        updated: newUser,\n      };\n    }\n\n    return {\n      old: null,\n      updated: null,\n    };\n  }\n}\n\nmodule.exports = UserUpdateAction;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,MAAMC,MAAM,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAE3C,MAAME,gBAAgB,SAASH,MAAM,CAAC;EACpCI,MAAM,CAACC,IAAI,EAAE;IACX,MAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;IAE1B,MAAMC,OAAO,GAAGF,IAAI,CAACG,EAAE,KAAKF,MAAM,CAACG,IAAI,CAACD,EAAE,GAAGF,MAAM,CAACG,IAAI,GAAGH,MAAM,CAACI,KAAK,CAACC,KAAK,CAACC,GAAG,CAACP,IAAI,CAACG,EAAE,CAAC;IAC1F,MAAMK,OAAO,GAAGN,OAAO,CAACO,OAAO,CAACT,IAAI,CAAC;IAErC,IAAI,CAACQ,OAAO,CAACE,MAAM,CAACR,OAAO,CAAC,EAAE;MAC5B;AACN;AACA;AACA;AACA;AACA;AACA;AACA;MACMD,MAAM,CAACU,IAAI,CAACd,MAAM,CAACe,UAAU,EAAEJ,OAAO,EAAEN,OAAO,CAAC;MAChD,OAAO;QACLW,GAAG,EAAEL,OAAO;QACZM,OAAO,EAAEZ;MACX,CAAC;IACH;IAEA,OAAO;MACLW,GAAG,EAAE,IAAI;MACTC,OAAO,EAAE;IACX,CAAC;EACH;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGlB,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}