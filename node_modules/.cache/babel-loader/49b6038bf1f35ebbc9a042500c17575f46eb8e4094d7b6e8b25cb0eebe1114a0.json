{"ast":null,"code":"'use strict';\n\nconst assert = require('assert');\nconst {\n  kDestroyed,\n  kBodyUsed\n} = require('./symbols');\nconst {\n  IncomingMessage\n} = require('http');\nconst stream = require('stream');\nconst net = require('net');\nconst {\n  InvalidArgumentError\n} = require('./errors');\nconst {\n  Blob\n} = require('buffer');\nconst nodeUtil = require('util');\nconst {\n  stringify\n} = require('querystring');\nfunction nop() {}\nfunction isStream(obj) {\n  return obj && typeof obj.pipe === 'function';\n}\n\n// based on https://github.com/node-fetch/fetch-blob/blob/8ab587d34080de94140b54f07168451e7d0b655e/index.js#L229-L241 (MIT License)\nfunction isBlobLike(object) {\n  return Blob && object instanceof Blob || object && typeof object === 'object' && (typeof object.stream === 'function' || typeof object.arrayBuffer === 'function') && /^(Blob|File)$/.test(object[Symbol.toStringTag]);\n}\nfunction buildURL(url, queryParams) {\n  if (url.includes('?') || url.includes('#')) {\n    throw new Error('Query params cannot be passed when url already contains \"?\" or \"#\".');\n  }\n  const stringified = stringify(queryParams);\n  if (stringified) {\n    url += '?' + stringified;\n  }\n  return url;\n}\nfunction parseURL(url) {\n  if (typeof url === 'string') {\n    url = new URL(url);\n  }\n  if (!url || typeof url !== 'object') {\n    throw new InvalidArgumentError('invalid url');\n  }\n  if (url.port != null && url.port !== '' && !Number.isFinite(parseInt(url.port))) {\n    throw new InvalidArgumentError('invalid port');\n  }\n  if (url.path != null && typeof url.path !== 'string') {\n    throw new InvalidArgumentError('invalid path');\n  }\n  if (url.pathname != null && typeof url.pathname !== 'string') {\n    throw new InvalidArgumentError('invalid pathname');\n  }\n  if (url.hostname != null && typeof url.hostname !== 'string') {\n    throw new InvalidArgumentError('invalid hostname');\n  }\n  if (url.origin != null && typeof url.origin !== 'string') {\n    throw new InvalidArgumentError('invalid origin');\n  }\n  if (!/^https?:/.test(url.origin || url.protocol)) {\n    throw new InvalidArgumentError('invalid protocol');\n  }\n  if (!(url instanceof URL)) {\n    const port = url.port != null ? url.port : url.protocol === 'https:' ? 443 : 80;\n    let origin = url.origin != null ? url.origin : `${url.protocol}//${url.hostname}:${port}`;\n    let path = url.path != null ? url.path : `${url.pathname || ''}${url.search || ''}`;\n    if (origin.endsWith('/')) {\n      origin = origin.substring(0, origin.length - 1);\n    }\n    if (path && !path.startsWith('/')) {\n      path = `/${path}`;\n    }\n    // new URL(path, origin) is unsafe when `path` contains an absolute URL\n    // From https://developer.mozilla.org/en-US/docs/Web/API/URL/URL:\n    // If first parameter is a relative URL, second param is required, and will be used as the base URL.\n    // If first parameter is an absolute URL, a given second param will be ignored.\n    url = new URL(origin + path);\n  }\n  return url;\n}\nfunction parseOrigin(url) {\n  url = parseURL(url);\n  if (url.pathname !== '/' || url.search || url.hash) {\n    throw new InvalidArgumentError('invalid url');\n  }\n  return url;\n}\nfunction getHostname(host) {\n  if (host[0] === '[') {\n    const idx = host.indexOf(']');\n    assert(idx !== -1);\n    return host.substr(1, idx - 1);\n  }\n  const idx = host.indexOf(':');\n  if (idx === -1) return host;\n  return host.substr(0, idx);\n}\n\n// IP addresses are not valid server names per RFC6066\n// > Currently, the only server names supported are DNS hostnames\nfunction getServerName(host) {\n  if (!host) {\n    return null;\n  }\n  assert.strictEqual(typeof host, 'string');\n  const servername = getHostname(host);\n  if (net.isIP(servername)) {\n    return '';\n  }\n  return servername;\n}\nfunction deepClone(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\nfunction isAsyncIterable(obj) {\n  return !!(obj != null && typeof obj[Symbol.asyncIterator] === 'function');\n}\nfunction isIterable(obj) {\n  return !!(obj != null && (typeof obj[Symbol.iterator] === 'function' || typeof obj[Symbol.asyncIterator] === 'function'));\n}\nfunction bodyLength(body) {\n  if (body == null) {\n    return 0;\n  } else if (isStream(body)) {\n    const state = body._readableState;\n    return state && state.ended === true && Number.isFinite(state.length) ? state.length : null;\n  } else if (isBlobLike(body)) {\n    return body.size != null ? body.size : null;\n  } else if (isBuffer(body)) {\n    return body.byteLength;\n  }\n  return null;\n}\nfunction isDestroyed(stream) {\n  return !stream || !!(stream.destroyed || stream[kDestroyed]);\n}\nfunction isReadableAborted(stream) {\n  const state = stream && stream._readableState;\n  return isDestroyed(stream) && state && !state.endEmitted;\n}\nfunction destroy(stream, err) {\n  if (!isStream(stream) || isDestroyed(stream)) {\n    return;\n  }\n  if (typeof stream.destroy === 'function') {\n    if (Object.getPrototypeOf(stream).constructor === IncomingMessage) {\n      // See: https://github.com/nodejs/node/pull/38505/files\n      stream.socket = null;\n    }\n    stream.destroy(err);\n  } else if (err) {\n    process.nextTick((stream, err) => {\n      stream.emit('error', err);\n    }, stream, err);\n  }\n  if (stream.destroyed !== true) {\n    stream[kDestroyed] = true;\n  }\n}\nconst KEEPALIVE_TIMEOUT_EXPR = /timeout=(\\d+)/;\nfunction parseKeepAliveTimeout(val) {\n  const m = val.toString().match(KEEPALIVE_TIMEOUT_EXPR);\n  return m ? parseInt(m[1], 10) * 1000 : null;\n}\nfunction parseHeaders(headers) {\n  let obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  for (let i = 0; i < headers.length; i += 2) {\n    const key = headers[i].toString().toLowerCase();\n    let val = obj[key];\n    if (!val) {\n      if (Array.isArray(headers[i + 1])) {\n        obj[key] = headers[i + 1];\n      } else {\n        obj[key] = headers[i + 1].toString();\n      }\n    } else {\n      if (!Array.isArray(val)) {\n        val = [val];\n        obj[key] = val;\n      }\n      val.push(headers[i + 1].toString());\n    }\n  }\n  return obj;\n}\nfunction parseRawHeaders(headers) {\n  return headers.map(header => header.toString());\n}\nfunction isBuffer(buffer) {\n  // See, https://github.com/mcollina/undici/pull/319\n  return buffer instanceof Uint8Array || Buffer.isBuffer(buffer);\n}\nfunction validateHandler(handler, method, upgrade) {\n  if (!handler || typeof handler !== 'object') {\n    throw new InvalidArgumentError('handler must be an object');\n  }\n  if (typeof handler.onConnect !== 'function') {\n    throw new InvalidArgumentError('invalid onConnect method');\n  }\n  if (typeof handler.onError !== 'function') {\n    throw new InvalidArgumentError('invalid onError method');\n  }\n  if (typeof handler.onBodySent !== 'function' && handler.onBodySent !== undefined) {\n    throw new InvalidArgumentError('invalid onBodySent method');\n  }\n  if (upgrade || method === 'CONNECT') {\n    if (typeof handler.onUpgrade !== 'function') {\n      throw new InvalidArgumentError('invalid onUpgrade method');\n    }\n  } else {\n    if (typeof handler.onHeaders !== 'function') {\n      throw new InvalidArgumentError('invalid onHeaders method');\n    }\n    if (typeof handler.onData !== 'function') {\n      throw new InvalidArgumentError('invalid onData method');\n    }\n    if (typeof handler.onComplete !== 'function') {\n      throw new InvalidArgumentError('invalid onComplete method');\n    }\n  }\n}\n\n// A body is disturbed if it has been read from and it cannot\n// be re-used without losing state or data.\nfunction isDisturbed(body) {\n  return !!(body && (stream.isDisturbed ? stream.isDisturbed(body) || body[kBodyUsed] // TODO (fix): Why is body[kBodyUsed] needed?\n  : body[kBodyUsed] || body.readableDidRead || body._readableState && body._readableState.dataEmitted || isReadableAborted(body)));\n}\nfunction isErrored(body) {\n  return !!(body && (stream.isErrored ? stream.isErrored(body) : /state: 'errored'/.test(nodeUtil.inspect(body))));\n}\nfunction isReadable(body) {\n  return !!(body && (stream.isReadable ? stream.isReadable(body) : /state: 'readable'/.test(nodeUtil.inspect(body))));\n}\nfunction getSocketInfo(socket) {\n  return {\n    localAddress: socket.localAddress,\n    localPort: socket.localPort,\n    remoteAddress: socket.remoteAddress,\n    remotePort: socket.remotePort,\n    remoteFamily: socket.remoteFamily,\n    timeout: socket.timeout,\n    bytesWritten: socket.bytesWritten,\n    bytesRead: socket.bytesRead\n  };\n}\nlet ReadableStream;\nfunction ReadableStreamFrom(iterable) {\n  if (!ReadableStream) {\n    ReadableStream = require('stream/web').ReadableStream;\n  }\n  if (ReadableStream.from) {\n    // https://github.com/whatwg/streams/pull/1083\n    return ReadableStream.from(iterable);\n  }\n  let iterator;\n  return new ReadableStream({\n    async start() {\n      iterator = iterable[Symbol.asyncIterator]();\n    },\n    async pull(controller) {\n      const {\n        done,\n        value\n      } = await iterator.next();\n      if (done) {\n        queueMicrotask(() => {\n          controller.close();\n        });\n      } else {\n        const buf = Buffer.isBuffer(value) ? value : Buffer.from(value);\n        controller.enqueue(new Uint8Array(buf));\n      }\n      return controller.desiredSize > 0;\n    },\n    async cancel(reason) {\n      await iterator.return();\n    }\n  }, 0);\n}\nfunction isFormDataLike(chunk) {\n  return chunk && chunk.constructor && chunk.constructor.name === 'FormData';\n}\nconst kEnumerableProperty = Object.create(null);\nkEnumerableProperty.enumerable = true;\nmodule.exports = {\n  kEnumerableProperty,\n  nop,\n  isDisturbed,\n  isErrored,\n  isReadable,\n  toUSVString: nodeUtil.toUSVString || (val => `${val}`),\n  isReadableAborted,\n  isBlobLike,\n  parseOrigin,\n  parseURL,\n  getServerName,\n  isStream,\n  isIterable,\n  isAsyncIterable,\n  isDestroyed,\n  parseRawHeaders,\n  parseHeaders,\n  parseKeepAliveTimeout,\n  destroy,\n  bodyLength,\n  deepClone,\n  ReadableStreamFrom,\n  isBuffer,\n  validateHandler,\n  getSocketInfo,\n  isFormDataLike,\n  buildURL\n};","map":{"version":3,"names":["assert","require","kDestroyed","kBodyUsed","IncomingMessage","stream","net","InvalidArgumentError","Blob","nodeUtil","stringify","nop","isStream","obj","pipe","isBlobLike","object","arrayBuffer","test","Symbol","toStringTag","buildURL","url","queryParams","includes","Error","stringified","parseURL","URL","port","Number","isFinite","parseInt","path","pathname","hostname","origin","protocol","search","endsWith","substring","length","startsWith","parseOrigin","hash","getHostname","host","idx","indexOf","substr","getServerName","strictEqual","servername","isIP","deepClone","JSON","parse","isAsyncIterable","asyncIterator","isIterable","iterator","bodyLength","body","state","_readableState","ended","size","isBuffer","byteLength","isDestroyed","destroyed","isReadableAborted","endEmitted","destroy","err","Object","getPrototypeOf","constructor","socket","process","nextTick","emit","KEEPALIVE_TIMEOUT_EXPR","parseKeepAliveTimeout","val","m","toString","match","parseHeaders","headers","i","key","toLowerCase","Array","isArray","push","parseRawHeaders","map","header","buffer","Uint8Array","Buffer","validateHandler","handler","method","upgrade","onConnect","onError","onBodySent","undefined","onUpgrade","onHeaders","onData","onComplete","isDisturbed","readableDidRead","dataEmitted","isErrored","inspect","isReadable","getSocketInfo","localAddress","localPort","remoteAddress","remotePort","remoteFamily","timeout","bytesWritten","bytesRead","ReadableStream","ReadableStreamFrom","iterable","from","start","pull","controller","done","value","next","queueMicrotask","close","buf","enqueue","desiredSize","cancel","reason","return","isFormDataLike","chunk","name","kEnumerableProperty","create","enumerable","module","exports","toUSVString"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/undici/lib/core/util.js"],"sourcesContent":["'use strict'\n\nconst assert = require('assert')\nconst { kDestroyed, kBodyUsed } = require('./symbols')\nconst { IncomingMessage } = require('http')\nconst stream = require('stream')\nconst net = require('net')\nconst { InvalidArgumentError } = require('./errors')\nconst { Blob } = require('buffer')\nconst nodeUtil = require('util')\nconst { stringify } = require('querystring')\n\nfunction nop () {}\n\nfunction isStream (obj) {\n  return obj && typeof obj.pipe === 'function'\n}\n\n// based on https://github.com/node-fetch/fetch-blob/blob/8ab587d34080de94140b54f07168451e7d0b655e/index.js#L229-L241 (MIT License)\nfunction isBlobLike (object) {\n  return (Blob && object instanceof Blob) || (\n    object &&\n    typeof object === 'object' &&\n    (typeof object.stream === 'function' ||\n      typeof object.arrayBuffer === 'function') &&\n    /^(Blob|File)$/.test(object[Symbol.toStringTag])\n  )\n}\n\nfunction buildURL (url, queryParams) {\n  if (url.includes('?') || url.includes('#')) {\n    throw new Error('Query params cannot be passed when url already contains \"?\" or \"#\".')\n  }\n\n  const stringified = stringify(queryParams)\n\n  if (stringified) {\n    url += '?' + stringified\n  }\n\n  return url\n}\n\nfunction parseURL (url) {\n  if (typeof url === 'string') {\n    url = new URL(url)\n  }\n\n  if (!url || typeof url !== 'object') {\n    throw new InvalidArgumentError('invalid url')\n  }\n\n  if (url.port != null && url.port !== '' && !Number.isFinite(parseInt(url.port))) {\n    throw new InvalidArgumentError('invalid port')\n  }\n\n  if (url.path != null && typeof url.path !== 'string') {\n    throw new InvalidArgumentError('invalid path')\n  }\n\n  if (url.pathname != null && typeof url.pathname !== 'string') {\n    throw new InvalidArgumentError('invalid pathname')\n  }\n\n  if (url.hostname != null && typeof url.hostname !== 'string') {\n    throw new InvalidArgumentError('invalid hostname')\n  }\n\n  if (url.origin != null && typeof url.origin !== 'string') {\n    throw new InvalidArgumentError('invalid origin')\n  }\n\n  if (!/^https?:/.test(url.origin || url.protocol)) {\n    throw new InvalidArgumentError('invalid protocol')\n  }\n\n  if (!(url instanceof URL)) {\n    const port = url.port != null\n      ? url.port\n      : (url.protocol === 'https:' ? 443 : 80)\n    let origin = url.origin != null\n      ? url.origin\n      : `${url.protocol}//${url.hostname}:${port}`\n    let path = url.path != null\n      ? url.path\n      : `${url.pathname || ''}${url.search || ''}`\n\n    if (origin.endsWith('/')) {\n      origin = origin.substring(0, origin.length - 1)\n    }\n\n    if (path && !path.startsWith('/')) {\n      path = `/${path}`\n    }\n    // new URL(path, origin) is unsafe when `path` contains an absolute URL\n    // From https://developer.mozilla.org/en-US/docs/Web/API/URL/URL:\n    // If first parameter is a relative URL, second param is required, and will be used as the base URL.\n    // If first parameter is an absolute URL, a given second param will be ignored.\n    url = new URL(origin + path)\n  }\n\n  return url\n}\n\nfunction parseOrigin (url) {\n  url = parseURL(url)\n\n  if (url.pathname !== '/' || url.search || url.hash) {\n    throw new InvalidArgumentError('invalid url')\n  }\n\n  return url\n}\n\nfunction getHostname (host) {\n  if (host[0] === '[') {\n    const idx = host.indexOf(']')\n\n    assert(idx !== -1)\n    return host.substr(1, idx - 1)\n  }\n\n  const idx = host.indexOf(':')\n  if (idx === -1) return host\n\n  return host.substr(0, idx)\n}\n\n// IP addresses are not valid server names per RFC6066\n// > Currently, the only server names supported are DNS hostnames\nfunction getServerName (host) {\n  if (!host) {\n    return null\n  }\n\n  assert.strictEqual(typeof host, 'string')\n\n  const servername = getHostname(host)\n  if (net.isIP(servername)) {\n    return ''\n  }\n\n  return servername\n}\n\nfunction deepClone (obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nfunction isAsyncIterable (obj) {\n  return !!(obj != null && typeof obj[Symbol.asyncIterator] === 'function')\n}\n\nfunction isIterable (obj) {\n  return !!(obj != null && (typeof obj[Symbol.iterator] === 'function' || typeof obj[Symbol.asyncIterator] === 'function'))\n}\n\nfunction bodyLength (body) {\n  if (body == null) {\n    return 0\n  } else if (isStream(body)) {\n    const state = body._readableState\n    return state && state.ended === true && Number.isFinite(state.length)\n      ? state.length\n      : null\n  } else if (isBlobLike(body)) {\n    return body.size != null ? body.size : null\n  } else if (isBuffer(body)) {\n    return body.byteLength\n  }\n\n  return null\n}\n\nfunction isDestroyed (stream) {\n  return !stream || !!(stream.destroyed || stream[kDestroyed])\n}\n\nfunction isReadableAborted (stream) {\n  const state = stream && stream._readableState\n  return isDestroyed(stream) && state && !state.endEmitted\n}\n\nfunction destroy (stream, err) {\n  if (!isStream(stream) || isDestroyed(stream)) {\n    return\n  }\n\n  if (typeof stream.destroy === 'function') {\n    if (Object.getPrototypeOf(stream).constructor === IncomingMessage) {\n      // See: https://github.com/nodejs/node/pull/38505/files\n      stream.socket = null\n    }\n    stream.destroy(err)\n  } else if (err) {\n    process.nextTick((stream, err) => {\n      stream.emit('error', err)\n    }, stream, err)\n  }\n\n  if (stream.destroyed !== true) {\n    stream[kDestroyed] = true\n  }\n}\n\nconst KEEPALIVE_TIMEOUT_EXPR = /timeout=(\\d+)/\nfunction parseKeepAliveTimeout (val) {\n  const m = val.toString().match(KEEPALIVE_TIMEOUT_EXPR)\n  return m ? parseInt(m[1], 10) * 1000 : null\n}\n\nfunction parseHeaders (headers, obj = {}) {\n  for (let i = 0; i < headers.length; i += 2) {\n    const key = headers[i].toString().toLowerCase()\n    let val = obj[key]\n    if (!val) {\n      if (Array.isArray(headers[i + 1])) {\n        obj[key] = headers[i + 1]\n      } else {\n        obj[key] = headers[i + 1].toString()\n      }\n    } else {\n      if (!Array.isArray(val)) {\n        val = [val]\n        obj[key] = val\n      }\n      val.push(headers[i + 1].toString())\n    }\n  }\n  return obj\n}\n\nfunction parseRawHeaders (headers) {\n  return headers.map(header => header.toString())\n}\n\nfunction isBuffer (buffer) {\n  // See, https://github.com/mcollina/undici/pull/319\n  return buffer instanceof Uint8Array || Buffer.isBuffer(buffer)\n}\n\nfunction validateHandler (handler, method, upgrade) {\n  if (!handler || typeof handler !== 'object') {\n    throw new InvalidArgumentError('handler must be an object')\n  }\n\n  if (typeof handler.onConnect !== 'function') {\n    throw new InvalidArgumentError('invalid onConnect method')\n  }\n\n  if (typeof handler.onError !== 'function') {\n    throw new InvalidArgumentError('invalid onError method')\n  }\n\n  if (typeof handler.onBodySent !== 'function' && handler.onBodySent !== undefined) {\n    throw new InvalidArgumentError('invalid onBodySent method')\n  }\n\n  if (upgrade || method === 'CONNECT') {\n    if (typeof handler.onUpgrade !== 'function') {\n      throw new InvalidArgumentError('invalid onUpgrade method')\n    }\n  } else {\n    if (typeof handler.onHeaders !== 'function') {\n      throw new InvalidArgumentError('invalid onHeaders method')\n    }\n\n    if (typeof handler.onData !== 'function') {\n      throw new InvalidArgumentError('invalid onData method')\n    }\n\n    if (typeof handler.onComplete !== 'function') {\n      throw new InvalidArgumentError('invalid onComplete method')\n    }\n  }\n}\n\n// A body is disturbed if it has been read from and it cannot\n// be re-used without losing state or data.\nfunction isDisturbed (body) {\n  return !!(body && (\n    stream.isDisturbed\n      ? stream.isDisturbed(body) || body[kBodyUsed] // TODO (fix): Why is body[kBodyUsed] needed?\n      : body[kBodyUsed] ||\n        body.readableDidRead ||\n        (body._readableState && body._readableState.dataEmitted) ||\n        isReadableAborted(body)\n  ))\n}\n\nfunction isErrored (body) {\n  return !!(body && (\n    stream.isErrored\n      ? stream.isErrored(body)\n      : /state: 'errored'/.test(nodeUtil.inspect(body)\n      )))\n}\n\nfunction isReadable (body) {\n  return !!(body && (\n    stream.isReadable\n      ? stream.isReadable(body)\n      : /state: 'readable'/.test(nodeUtil.inspect(body)\n      )))\n}\n\nfunction getSocketInfo (socket) {\n  return {\n    localAddress: socket.localAddress,\n    localPort: socket.localPort,\n    remoteAddress: socket.remoteAddress,\n    remotePort: socket.remotePort,\n    remoteFamily: socket.remoteFamily,\n    timeout: socket.timeout,\n    bytesWritten: socket.bytesWritten,\n    bytesRead: socket.bytesRead\n  }\n}\n\nlet ReadableStream\nfunction ReadableStreamFrom (iterable) {\n  if (!ReadableStream) {\n    ReadableStream = require('stream/web').ReadableStream\n  }\n\n  if (ReadableStream.from) {\n    // https://github.com/whatwg/streams/pull/1083\n    return ReadableStream.from(iterable)\n  }\n\n  let iterator\n  return new ReadableStream(\n    {\n      async start () {\n        iterator = iterable[Symbol.asyncIterator]()\n      },\n      async pull (controller) {\n        const { done, value } = await iterator.next()\n        if (done) {\n          queueMicrotask(() => {\n            controller.close()\n          })\n        } else {\n          const buf = Buffer.isBuffer(value) ? value : Buffer.from(value)\n          controller.enqueue(new Uint8Array(buf))\n        }\n        return controller.desiredSize > 0\n      },\n      async cancel (reason) {\n        await iterator.return()\n      }\n    },\n    0\n  )\n}\n\nfunction isFormDataLike (chunk) {\n  return chunk && chunk.constructor && chunk.constructor.name === 'FormData'\n}\n\nconst kEnumerableProperty = Object.create(null)\nkEnumerableProperty.enumerable = true\n\nmodule.exports = {\n  kEnumerableProperty,\n  nop,\n  isDisturbed,\n  isErrored,\n  isReadable,\n  toUSVString: nodeUtil.toUSVString || ((val) => `${val}`),\n  isReadableAborted,\n  isBlobLike,\n  parseOrigin,\n  parseURL,\n  getServerName,\n  isStream,\n  isIterable,\n  isAsyncIterable,\n  isDestroyed,\n  parseRawHeaders,\n  parseHeaders,\n  parseKeepAliveTimeout,\n  destroy,\n  bodyLength,\n  deepClone,\n  ReadableStreamFrom,\n  isBuffer,\n  validateHandler,\n  getSocketInfo,\n  isFormDataLike,\n  buildURL\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}