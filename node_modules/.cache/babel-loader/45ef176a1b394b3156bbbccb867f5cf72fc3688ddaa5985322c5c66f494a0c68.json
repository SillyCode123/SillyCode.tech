{"ast":null,"code":"'use strict';\n\nconst {\n  Collection\n} = require('@discordjs/collection');\nconst {\n  DiscordSnowflake\n} = require('@sapphire/snowflake');\nconst Base = require('./Base');\nconst {\n  Sticker\n} = require('./Sticker');\n\n/**\n * Represents a pack of standard stickers.\n * @extends {Base}\n */\nclass StickerPack extends Base {\n  constructor(client, pack) {\n    super(client);\n    /**\n     * The Sticker pack's id\n     * @type {Snowflake}\n     */\n    this.id = pack.id;\n\n    /**\n     * The stickers in the pack\n     * @type {Collection<Snowflake, Sticker>}\n     */\n    this.stickers = new Collection(pack.stickers.map(s => [s.id, new Sticker(client, s)]));\n\n    /**\n     * The name of the sticker pack\n     * @type {string}\n     */\n    this.name = pack.name;\n\n    /**\n     * The id of the pack's SKU\n     * @type {Snowflake}\n     */\n    this.skuId = pack.sku_id;\n\n    /**\n     * The id of a sticker in the pack which is shown as the pack's icon\n     * @type {?Snowflake}\n     */\n    this.coverStickerId = pack.cover_sticker_id ?? null;\n\n    /**\n     * The description of the sticker pack\n     * @type {string}\n     */\n    this.description = pack.description;\n\n    /**\n     * The id of the sticker pack's banner image\n     * @type {?Snowflake}\n     */\n    this.bannerId = pack.banner_asset_id ?? null;\n  }\n\n  /**\n   * The timestamp the sticker was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time the sticker was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The sticker which is shown as the pack's icon\n   * @type {?Sticker}\n   * @readonly\n   */\n  get coverSticker() {\n    return this.coverStickerId && this.stickers.get(this.coverStickerId);\n  }\n\n  /**\n   * The URL to this sticker pack's banner.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  bannerURL() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return this.bannerId && this.client.rest.cdn.stickerPackBanner(this.bannerId, options);\n  }\n}\nmodule.exports = StickerPack;","map":{"version":3,"names":["Collection","require","DiscordSnowflake","Base","Sticker","StickerPack","constructor","client","pack","id","stickers","map","s","name","skuId","sku_id","coverStickerId","cover_sticker_id","description","bannerId","banner_asset_id","createdTimestamp","timestampFrom","createdAt","Date","coverSticker","get","bannerURL","options","rest","cdn","stickerPackBanner","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/structures/StickerPack.js"],"sourcesContent":["'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst Base = require('./Base');\nconst { Sticker } = require('./Sticker');\n\n/**\n * Represents a pack of standard stickers.\n * @extends {Base}\n */\nclass StickerPack extends Base {\n  constructor(client, pack) {\n    super(client);\n    /**\n     * The Sticker pack's id\n     * @type {Snowflake}\n     */\n    this.id = pack.id;\n\n    /**\n     * The stickers in the pack\n     * @type {Collection<Snowflake, Sticker>}\n     */\n    this.stickers = new Collection(pack.stickers.map(s => [s.id, new Sticker(client, s)]));\n\n    /**\n     * The name of the sticker pack\n     * @type {string}\n     */\n    this.name = pack.name;\n\n    /**\n     * The id of the pack's SKU\n     * @type {Snowflake}\n     */\n    this.skuId = pack.sku_id;\n\n    /**\n     * The id of a sticker in the pack which is shown as the pack's icon\n     * @type {?Snowflake}\n     */\n    this.coverStickerId = pack.cover_sticker_id ?? null;\n\n    /**\n     * The description of the sticker pack\n     * @type {string}\n     */\n    this.description = pack.description;\n\n    /**\n     * The id of the sticker pack's banner image\n     * @type {?Snowflake}\n     */\n    this.bannerId = pack.banner_asset_id ?? null;\n  }\n\n  /**\n   * The timestamp the sticker was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time the sticker was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The sticker which is shown as the pack's icon\n   * @type {?Sticker}\n   * @readonly\n   */\n  get coverSticker() {\n    return this.coverStickerId && this.stickers.get(this.coverStickerId);\n  }\n\n  /**\n   * The URL to this sticker pack's banner.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  bannerURL(options = {}) {\n    return this.bannerId && this.client.rest.cdn.stickerPackBanner(this.bannerId, options);\n  }\n}\n\nmodule.exports = StickerPack;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAW,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACvD,MAAM;EAAEC;AAAiB,CAAC,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAC3D,MAAME,IAAI,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAM;EAAEG;AAAQ,CAAC,GAAGH,OAAO,CAAC,WAAW,CAAC;;AAExC;AACA;AACA;AACA;AACA,MAAMI,WAAW,SAASF,IAAI,CAAC;EAC7BG,WAAW,CAACC,MAAM,EAAEC,IAAI,EAAE;IACxB,KAAK,CAACD,MAAM,CAAC;IACb;AACJ;AACA;AACA;IACI,IAAI,CAACE,EAAE,GAAGD,IAAI,CAACC,EAAE;;IAEjB;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAG,IAAIV,UAAU,CAACQ,IAAI,CAACE,QAAQ,CAACC,GAAG,CAACC,CAAC,IAAI,CAACA,CAAC,CAACH,EAAE,EAAE,IAAIL,OAAO,CAACG,MAAM,EAAEK,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEtF;AACJ;AACA;AACA;IACI,IAAI,CAACC,IAAI,GAAGL,IAAI,CAACK,IAAI;;IAErB;AACJ;AACA;AACA;IACI,IAAI,CAACC,KAAK,GAAGN,IAAI,CAACO,MAAM;;IAExB;AACJ;AACA;AACA;IACI,IAAI,CAACC,cAAc,GAAGR,IAAI,CAACS,gBAAgB,IAAI,IAAI;;IAEnD;AACJ;AACA;AACA;IACI,IAAI,CAACC,WAAW,GAAGV,IAAI,CAACU,WAAW;;IAEnC;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAGX,IAAI,CAACY,eAAe,IAAI,IAAI;EAC9C;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,gBAAgB,GAAG;IACrB,OAAOnB,gBAAgB,CAACoB,aAAa,CAAC,IAAI,CAACb,EAAE,CAAC;EAChD;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIc,SAAS,GAAG;IACd,OAAO,IAAIC,IAAI,CAAC,IAAI,CAACH,gBAAgB,CAAC;EACxC;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAII,YAAY,GAAG;IACjB,OAAO,IAAI,CAACT,cAAc,IAAI,IAAI,CAACN,QAAQ,CAACgB,GAAG,CAAC,IAAI,CAACV,cAAc,CAAC;EACtE;;EAEA;AACF;AACA;AACA;AACA;EACEW,SAAS,GAAe;IAAA,IAAdC,OAAO,uEAAG,CAAC,CAAC;IACpB,OAAO,IAAI,CAACT,QAAQ,IAAI,IAAI,CAACZ,MAAM,CAACsB,IAAI,CAACC,GAAG,CAACC,iBAAiB,CAAC,IAAI,CAACZ,QAAQ,EAAES,OAAO,CAAC;EACxF;AACF;AAEAI,MAAM,CAACC,OAAO,GAAG5B,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}