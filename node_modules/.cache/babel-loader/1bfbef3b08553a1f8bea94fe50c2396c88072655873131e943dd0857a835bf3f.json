{"ast":null,"code":"'use strict';\n\nconst Base = require('./Base');\n\n/**\n * Represents a WidgetMember.\n * @extends {Base}\n */\nclass WidgetMember extends Base {\n  /**\n   * Activity sent in a {@link WidgetMember}.\n   * @typedef {Object} WidgetActivity\n   * @property {string} name The name of the activity\n   */\n\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The id of the user. It's an arbitrary number.\n     * @type {string}\n     */\n    this.id = data.id;\n\n    /**\n     * The username of the member.\n     * @type {string}\n     */\n    this.username = data.username;\n\n    /**\n     * The discriminator of the member.\n     * @type {string}\n     */\n    this.discriminator = data.discriminator;\n\n    /**\n     * The avatar of the member.\n     * @type {?string}\n     */\n    this.avatar = data.avatar;\n\n    /**\n     * The status of the member.\n     * @type {PresenceStatus}\n     */\n    this.status = data.status;\n\n    /**\n     * If the member is server deafened\n     * @type {?boolean}\n     */\n    this.deaf = data.deaf ?? null;\n\n    /**\n     * If the member is server muted\n     * @type {?boolean}\n     */\n    this.mute = data.mute ?? null;\n\n    /**\n     * If the member is self deafened\n     * @type {?boolean}\n     */\n    this.selfDeaf = data.self_deaf ?? null;\n\n    /**\n     * If the member is self muted\n     * @type {?boolean}\n     */\n    this.selfMute = data.self_mute ?? null;\n\n    /**\n     * If the member is suppressed\n     * @type {?boolean}\n     */\n    this.suppress = data.suppress ?? null;\n\n    /**\n     * The id of the voice channel the member is in, if any\n     * @type {?Snowflake}\n     */\n    this.channelId = data.channel_id ?? null;\n\n    /**\n     * The avatar URL of the member.\n     * @type {string}\n     */\n    this.avatarURL = data.avatar_url;\n\n    /**\n     * The activity of the member.\n     * @type {?WidgetActivity}\n     */\n    this.activity = data.activity ?? null;\n  }\n}\nmodule.exports = WidgetMember;","map":{"version":3,"names":["Base","require","WidgetMember","constructor","client","data","id","username","discriminator","avatar","status","deaf","mute","selfDeaf","self_deaf","selfMute","self_mute","suppress","channelId","channel_id","avatarURL","avatar_url","activity","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/structures/WidgetMember.js"],"sourcesContent":["'use strict';\n\nconst Base = require('./Base');\n\n/**\n * Represents a WidgetMember.\n * @extends {Base}\n */\nclass WidgetMember extends Base {\n  /**\n   * Activity sent in a {@link WidgetMember}.\n   * @typedef {Object} WidgetActivity\n   * @property {string} name The name of the activity\n   */\n\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The id of the user. It's an arbitrary number.\n     * @type {string}\n     */\n    this.id = data.id;\n\n    /**\n     * The username of the member.\n     * @type {string}\n     */\n    this.username = data.username;\n\n    /**\n     * The discriminator of the member.\n     * @type {string}\n     */\n    this.discriminator = data.discriminator;\n\n    /**\n     * The avatar of the member.\n     * @type {?string}\n     */\n    this.avatar = data.avatar;\n\n    /**\n     * The status of the member.\n     * @type {PresenceStatus}\n     */\n    this.status = data.status;\n\n    /**\n     * If the member is server deafened\n     * @type {?boolean}\n     */\n    this.deaf = data.deaf ?? null;\n\n    /**\n     * If the member is server muted\n     * @type {?boolean}\n     */\n    this.mute = data.mute ?? null;\n\n    /**\n     * If the member is self deafened\n     * @type {?boolean}\n     */\n    this.selfDeaf = data.self_deaf ?? null;\n\n    /**\n     * If the member is self muted\n     * @type {?boolean}\n     */\n    this.selfMute = data.self_mute ?? null;\n\n    /**\n     * If the member is suppressed\n     * @type {?boolean}\n     */\n    this.suppress = data.suppress ?? null;\n\n    /**\n     * The id of the voice channel the member is in, if any\n     * @type {?Snowflake}\n     */\n    this.channelId = data.channel_id ?? null;\n\n    /**\n     * The avatar URL of the member.\n     * @type {string}\n     */\n    this.avatarURL = data.avatar_url;\n\n    /**\n     * The activity of the member.\n     * @type {?WidgetActivity}\n     */\n    this.activity = data.activity ?? null;\n  }\n}\n\nmodule.exports = WidgetMember;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA;AACA,MAAMC,YAAY,SAASF,IAAI,CAAC;EAC9B;AACF;AACA;AACA;AACA;;EAEEG,WAAW,CAACC,MAAM,EAAEC,IAAI,EAAE;IACxB,KAAK,CAACD,MAAM,CAAC;;IAEb;AACJ;AACA;AACA;IACI,IAAI,CAACE,EAAE,GAAGD,IAAI,CAACC,EAAE;;IAEjB;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAGF,IAAI,CAACE,QAAQ;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACC,aAAa,GAAGH,IAAI,CAACG,aAAa;;IAEvC;AACJ;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAGJ,IAAI,CAACI,MAAM;;IAEzB;AACJ;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAGL,IAAI,CAACK,MAAM;;IAEzB;AACJ;AACA;AACA;IACI,IAAI,CAACC,IAAI,GAAGN,IAAI,CAACM,IAAI,IAAI,IAAI;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACC,IAAI,GAAGP,IAAI,CAACO,IAAI,IAAI,IAAI;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAGR,IAAI,CAACS,SAAS,IAAI,IAAI;;IAEtC;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAGV,IAAI,CAACW,SAAS,IAAI,IAAI;;IAEtC;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAGZ,IAAI,CAACY,QAAQ,IAAI,IAAI;;IAErC;AACJ;AACA;AACA;IACI,IAAI,CAACC,SAAS,GAAGb,IAAI,CAACc,UAAU,IAAI,IAAI;;IAExC;AACJ;AACA;AACA;IACI,IAAI,CAACC,SAAS,GAAGf,IAAI,CAACgB,UAAU;;IAEhC;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAGjB,IAAI,CAACiB,QAAQ,IAAI,IAAI;EACvC;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGtB,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}