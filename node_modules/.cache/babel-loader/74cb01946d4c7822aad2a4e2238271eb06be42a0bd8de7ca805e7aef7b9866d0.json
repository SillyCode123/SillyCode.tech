{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\n/*\n{ user_id: 'id',\n     message_id: 'id',\n     emoji: { name: '�', id: null },\n     channel_id: 'id',\n     guild_id: 'id' }\n*/\n\nclass MessageReactionRemove extends Action {\n  handle(data) {\n    if (!data.emoji) return false;\n    const user = this.getUser(data);\n    if (!user) return false;\n\n    // Verify channel\n    const channel = this.getChannel(data);\n    if (!channel?.isTextBased()) return false;\n\n    // Verify message\n    const message = this.getMessage(data, channel);\n    if (!message) return false;\n\n    // Verify reaction\n    const reaction = this.getReaction(data, message, user);\n    if (!reaction) return false;\n    reaction._remove(user);\n    /**\n     * Emitted whenever a reaction is removed from a cached message.\n     * @event Client#messageReactionRemove\n     * @param {MessageReaction} messageReaction The reaction object\n     * @param {User} user The user whose emoji or reaction emoji was removed\n     */\n    this.client.emit(Events.MessageReactionRemove, reaction, user);\n    return {\n      message,\n      reaction,\n      user\n    };\n  }\n}\nmodule.exports = MessageReactionRemove;","map":{"version":3,"names":["Action","require","Events","MessageReactionRemove","handle","data","emoji","user","getUser","channel","getChannel","isTextBased","message","getMessage","reaction","getReaction","_remove","client","emit","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/client/actions/MessageReactionRemove.js"],"sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\n/*\n{ user_id: 'id',\n     message_id: 'id',\n     emoji: { name: '�', id: null },\n     channel_id: 'id',\n     guild_id: 'id' }\n*/\n\nclass MessageReactionRemove extends Action {\n  handle(data) {\n    if (!data.emoji) return false;\n\n    const user = this.getUser(data);\n    if (!user) return false;\n\n    // Verify channel\n    const channel = this.getChannel(data);\n    if (!channel?.isTextBased()) return false;\n\n    // Verify message\n    const message = this.getMessage(data, channel);\n    if (!message) return false;\n\n    // Verify reaction\n    const reaction = this.getReaction(data, message, user);\n    if (!reaction) return false;\n    reaction._remove(user);\n    /**\n     * Emitted whenever a reaction is removed from a cached message.\n     * @event Client#messageReactionRemove\n     * @param {MessageReaction} messageReaction The reaction object\n     * @param {User} user The user whose emoji or reaction emoji was removed\n     */\n    this.client.emit(Events.MessageReactionRemove, reaction, user);\n\n    return { message, reaction, user };\n  }\n}\n\nmodule.exports = MessageReactionRemove;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,MAAMC,MAAM,GAAGD,OAAO,CAAC,mBAAmB,CAAC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAME,qBAAqB,SAASH,MAAM,CAAC;EACzCI,MAAM,CAACC,IAAI,EAAE;IACX,IAAI,CAACA,IAAI,CAACC,KAAK,EAAE,OAAO,KAAK;IAE7B,MAAMC,IAAI,GAAG,IAAI,CAACC,OAAO,CAACH,IAAI,CAAC;IAC/B,IAAI,CAACE,IAAI,EAAE,OAAO,KAAK;;IAEvB;IACA,MAAME,OAAO,GAAG,IAAI,CAACC,UAAU,CAACL,IAAI,CAAC;IACrC,IAAI,CAACI,OAAO,EAAEE,WAAW,EAAE,EAAE,OAAO,KAAK;;IAEzC;IACA,MAAMC,OAAO,GAAG,IAAI,CAACC,UAAU,CAACR,IAAI,EAAEI,OAAO,CAAC;IAC9C,IAAI,CAACG,OAAO,EAAE,OAAO,KAAK;;IAE1B;IACA,MAAME,QAAQ,GAAG,IAAI,CAACC,WAAW,CAACV,IAAI,EAAEO,OAAO,EAAEL,IAAI,CAAC;IACtD,IAAI,CAACO,QAAQ,EAAE,OAAO,KAAK;IAC3BA,QAAQ,CAACE,OAAO,CAACT,IAAI,CAAC;IACtB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACU,MAAM,CAACC,IAAI,CAAChB,MAAM,CAACC,qBAAqB,EAAEW,QAAQ,EAAEP,IAAI,CAAC;IAE9D,OAAO;MAAEK,OAAO;MAAEE,QAAQ;MAAEP;IAAK,CAAC;EACpC;AACF;AAEAY,MAAM,CAACC,OAAO,GAAGjB,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}