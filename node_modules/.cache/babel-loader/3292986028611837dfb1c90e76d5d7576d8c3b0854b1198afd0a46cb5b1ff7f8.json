{"ast":null,"code":"'use strict';\n\nconst Component = require('./Component');\n\n/**\n * Represents a button component\n * @extends {Component}\n */\nclass ButtonComponent extends Component {\n  /**\n   * The style of this button\n   * @type {ButtonStyle}\n   * @readonly\n   */\n  get style() {\n    return this.data.style;\n  }\n\n  /**\n   * The label of this button\n   * @type {?string}\n   * @readonly\n   */\n  get label() {\n    return this.data.label ?? null;\n  }\n\n  /**\n   * The emoji used in this button\n   * @type {?APIMessageComponentEmoji}\n   * @readonly\n   */\n  get emoji() {\n    return this.data.emoji ?? null;\n  }\n\n  /**\n   * Whether this button is disabled\n   * @type {?boolean}\n   * @readonly\n   */\n  get disabled() {\n    return this.data.disabled ?? null;\n  }\n\n  /**\n   * The custom id of this button (only defined on non-link buttons)\n   * @type {?string}\n   * @readonly\n   */\n  get customId() {\n    return this.data.custom_id ?? null;\n  }\n\n  /**\n   * The URL of this button (only defined on link buttons)\n   * @type {?string}\n   * @readonly\n   */\n  get url() {\n    return this.data.url ?? null;\n  }\n}\nmodule.exports = ButtonComponent;","map":{"version":3,"names":["Component","require","ButtonComponent","style","data","label","emoji","disabled","customId","custom_id","url","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/structures/ButtonComponent.js"],"sourcesContent":["'use strict';\n\nconst Component = require('./Component');\n\n/**\n * Represents a button component\n * @extends {Component}\n */\nclass ButtonComponent extends Component {\n  /**\n   * The style of this button\n   * @type {ButtonStyle}\n   * @readonly\n   */\n  get style() {\n    return this.data.style;\n  }\n\n  /**\n   * The label of this button\n   * @type {?string}\n   * @readonly\n   */\n  get label() {\n    return this.data.label ?? null;\n  }\n\n  /**\n   * The emoji used in this button\n   * @type {?APIMessageComponentEmoji}\n   * @readonly\n   */\n  get emoji() {\n    return this.data.emoji ?? null;\n  }\n\n  /**\n   * Whether this button is disabled\n   * @type {?boolean}\n   * @readonly\n   */\n  get disabled() {\n    return this.data.disabled ?? null;\n  }\n\n  /**\n   * The custom id of this button (only defined on non-link buttons)\n   * @type {?string}\n   * @readonly\n   */\n  get customId() {\n    return this.data.custom_id ?? null;\n  }\n\n  /**\n   * The URL of this button (only defined on link buttons)\n   * @type {?string}\n   * @readonly\n   */\n  get url() {\n    return this.data.url ?? null;\n  }\n}\n\nmodule.exports = ButtonComponent;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,aAAa,CAAC;;AAExC;AACA;AACA;AACA;AACA,MAAMC,eAAe,SAASF,SAAS,CAAC;EACtC;AACF;AACA;AACA;AACA;EACE,IAAIG,KAAK,GAAG;IACV,OAAO,IAAI,CAACC,IAAI,CAACD,KAAK;EACxB;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIE,KAAK,GAAG;IACV,OAAO,IAAI,CAACD,IAAI,CAACC,KAAK,IAAI,IAAI;EAChC;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,KAAK,GAAG;IACV,OAAO,IAAI,CAACF,IAAI,CAACE,KAAK,IAAI,IAAI;EAChC;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,QAAQ,GAAG;IACb,OAAO,IAAI,CAACH,IAAI,CAACG,QAAQ,IAAI,IAAI;EACnC;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,QAAQ,GAAG;IACb,OAAO,IAAI,CAACJ,IAAI,CAACK,SAAS,IAAI,IAAI;EACpC;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,GAAG,GAAG;IACR,OAAO,IAAI,CAACN,IAAI,CAACM,GAAG,IAAI,IAAI;EAC9B;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGV,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}