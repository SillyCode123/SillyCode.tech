{"ast":null,"code":"'use strict';\n\nconst Base = require('./Base');\n\n/**\n * Represents a typing state for a user in a channel.\n * @extends {Base}\n */\nclass Typing extends Base {\n  constructor(channel, user, data) {\n    super(channel.client);\n\n    /**\n     * The channel the status is from\n     * @type {TextBasedChannels}\n     */\n    this.channel = channel;\n\n    /**\n     * The user who is typing\n     * @type {User}\n     */\n    this.user = user;\n    this._patch(data);\n  }\n  _patch(data) {\n    if ('timestamp' in data) {\n      /**\n       * The UNIX timestamp in milliseconds the user started typing at\n       * @type {number}\n       */\n      this.startedTimestamp = data.timestamp * 1_000;\n    }\n  }\n\n  /**\n   * Indicates whether the status is received from a guild.\n   * @returns {boolean}\n   */\n  inGuild() {\n    return this.guild !== null;\n  }\n\n  /**\n   * The time the user started typing at\n   * @type {Date}\n   * @readonly\n   */\n  get startedAt() {\n    return new Date(this.startedTimestamp);\n  }\n\n  /**\n   * The guild the status is from\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.channel.guild ?? null;\n  }\n\n  /**\n   * The member who is typing\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get member() {\n    return this.guild?.members.resolve(this.user) ?? null;\n  }\n}\nmodule.exports = Typing;","map":{"version":3,"names":["Base","require","Typing","constructor","channel","user","data","client","_patch","startedTimestamp","timestamp","inGuild","guild","startedAt","Date","member","members","resolve","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/structures/Typing.js"],"sourcesContent":["'use strict';\n\nconst Base = require('./Base');\n\n/**\n * Represents a typing state for a user in a channel.\n * @extends {Base}\n */\nclass Typing extends Base {\n  constructor(channel, user, data) {\n    super(channel.client);\n\n    /**\n     * The channel the status is from\n     * @type {TextBasedChannels}\n     */\n    this.channel = channel;\n\n    /**\n     * The user who is typing\n     * @type {User}\n     */\n    this.user = user;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('timestamp' in data) {\n      /**\n       * The UNIX timestamp in milliseconds the user started typing at\n       * @type {number}\n       */\n      this.startedTimestamp = data.timestamp * 1_000;\n    }\n  }\n\n  /**\n   * Indicates whether the status is received from a guild.\n   * @returns {boolean}\n   */\n  inGuild() {\n    return this.guild !== null;\n  }\n\n  /**\n   * The time the user started typing at\n   * @type {Date}\n   * @readonly\n   */\n  get startedAt() {\n    return new Date(this.startedTimestamp);\n  }\n\n  /**\n   * The guild the status is from\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.channel.guild ?? null;\n  }\n\n  /**\n   * The member who is typing\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get member() {\n    return this.guild?.members.resolve(this.user) ?? null;\n  }\n}\n\nmodule.exports = Typing;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA;AACA,MAAMC,MAAM,SAASF,IAAI,CAAC;EACxBG,WAAW,CAACC,OAAO,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAC/B,KAAK,CAACF,OAAO,CAACG,MAAM,CAAC;;IAErB;AACJ;AACA;AACA;IACI,IAAI,CAACH,OAAO,GAAGA,OAAO;;IAEtB;AACJ;AACA;AACA;IACI,IAAI,CAACC,IAAI,GAAGA,IAAI;IAEhB,IAAI,CAACG,MAAM,CAACF,IAAI,CAAC;EACnB;EAEAE,MAAM,CAACF,IAAI,EAAE;IACX,IAAI,WAAW,IAAIA,IAAI,EAAE;MACvB;AACN;AACA;AACA;MACM,IAAI,CAACG,gBAAgB,GAAGH,IAAI,CAACI,SAAS,GAAG,KAAK;IAChD;EACF;;EAEA;AACF;AACA;AACA;EACEC,OAAO,GAAG;IACR,OAAO,IAAI,CAACC,KAAK,KAAK,IAAI;EAC5B;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,SAAS,GAAG;IACd,OAAO,IAAIC,IAAI,CAAC,IAAI,CAACL,gBAAgB,CAAC;EACxC;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIG,KAAK,GAAG;IACV,OAAO,IAAI,CAACR,OAAO,CAACQ,KAAK,IAAI,IAAI;EACnC;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIG,MAAM,GAAG;IACX,OAAO,IAAI,CAACH,KAAK,EAAEI,OAAO,CAACC,OAAO,CAAC,IAAI,CAACZ,IAAI,CAAC,IAAI,IAAI;EACvD;AACF;AAEAa,MAAM,CAACC,OAAO,GAAGjB,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}