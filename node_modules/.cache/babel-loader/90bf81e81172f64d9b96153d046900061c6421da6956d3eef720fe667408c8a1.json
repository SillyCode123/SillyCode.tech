{"ast":null,"code":"var _jsxFileName = \"J:\\\\Coding\\\\Projekts\\\\Web\\\\JavaScript\\\\sillcode.tech\\\\src\\\\pages\\\\dashboard\\\\dashboard.js\";\nimport { motion } from \"framer-motion\";\nimport React from \"react\";\nimport logo from '../../img/SillyCoder.png';\n\n//setup the variables\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar token_type = \"empty\";\nvar access_token = \"empty\";\nvar url = \"http://localhost:3000/dashboard\";\nfunction Dashboard() {\n  window.addEventListener('load', load);\n  const loginclick = () => {\n    if (window.location.href.toString() !== url) {\n      window.location.href = url;\n    } else {\n      window.location.href = \"https://discord.com/api/oauth2/authorize?client_id=1043950277738385499&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fdashboard&response_type=token&scope=identify%20guilds\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logoNav\",\n        children: [/*#__PURE__*/_jsxDEV(motion.a, {\n          href: \"index\",\n          whileHover: {\n            scale: 1.1\n          },\n          whileTap: {\n            scale: 0.9\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"round\",\n            alt: \"\",\n            src: logo,\n            width: \"150px\",\n            height: \"150px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          whileHover: {\n            scale: 1.1\n          },\n          whileTap: {\n            scale: 0.9\n          },\n          className: \"indexBtn\",\n          id: \"loginButton\",\n          onClick: loginclick,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"middle\",\n        children: \"Nothing to Display. Please Login.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_c = Dashboard;\nfunction load() {\n  if (window.location.href.toString() !== url) {\n    //get the url\n    let url = document.URL;\n\n    //split the url in the terms we need\n    const split = url.split(\"=\");\n    const split2 = split[1].split(\"&\");\n    const split3 = split[2].split(\"&\");\n\n    //order the tokens their content\n    token_type = split2[0];\n    access_token = split3[0];\n\n    //go with the token and token type to the Discordapi\n    fetch('https://discord.com/api/users/@me', {\n      headers: {\n        authorization: `${token_type} ${access_token}`\n      }\n    }).then(result => result.json()).then(response => {\n      clearContent();\n      const {\n        id,\n        username,\n        avatar,\n        discriminator\n      } = response;\n\n      //give the build controller the data from the Api after asking for a cookie\n      buildController(id, username, avatar, discriminator);\n    }).catch(console.error);\n  } else {\n    //write that we are not able to use the dashboard because we are loged in\n    document.getElementById(\"content\").innerHTML = \"Login to use the Dashboard\";\n    document.getElementById(\"content\").className = \"middle\";\n  }\n}\nfunction buildController(id, username, avatar, discriminator) {\n  //go the div where we write in\n  let middleText = document.querySelector(\"body\");\n\n  // create the welcome in an h1\n  let h1 = document.createElement(\"h1\");\n  h1.innerHTML = \"Welcome \";\n\n  //setup the link to the discord avatar picture and create the img\n  let avaurl = \"https://cdn.discordapp.com/avatars/\" + id + \"/\" + avatar + \".jpg\";\n  let img = document.createElement('img');\n  img.src = avaurl;\n  img.style.scale = \"1%\";\n  img.className = \"round\";\n\n  //setup the the h1 for the two spans\n  let h1_2 = document.createElement(\"h1\");\n\n  //create the span for the username\n  let span = document.createElement(\"span\");\n  span.innerText = username;\n\n  //create the span for the Discordtag aka discriminator\n  let span1 = document.createElement(\"span\");\n  span1.innerText = \"#\" + discriminator;\n\n  //append the childs\n  middleText.appendChild(h1);\n  middleText.appendChild(img);\n  h1_2.appendChild(span);\n  h1_2.appendChild(span1);\n  middleText.appendChild(h1_2);\n}\nfunction clearContent() {\n  document.querySelector(\"nav\").remove();\n  document.querySelector(\"main\").remove();\n  document.querySelector(\"br\").remove();\n}\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["motion","React","logo","token_type","access_token","url","Dashboard","window","addEventListener","load","loginclick","location","href","toString","scale","document","URL","split","split2","split3","fetch","headers","authorization","then","result","json","response","clearContent","id","username","avatar","discriminator","buildController","catch","console","error","getElementById","innerHTML","className","middleText","querySelector","h1","createElement","avaurl","img","src","style","h1_2","span","innerText","span1","appendChild","remove"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/src/pages/dashboard/dashboard.js"],"sourcesContent":["import { motion } from \"framer-motion\";\r\nimport React from \"react\";\r\nimport logo from '../../img/SillyCoder.png';\r\n\r\n//setup the variables\r\nvar token_type = \"empty\";\r\nvar access_token = \"empty\";\r\nvar url = \"http://localhost:3000/dashboard\";\r\n\r\nfunction Dashboard() {\r\n    \r\n    window.addEventListener('load', load);\r\n\r\n    const loginclick = () => {\r\n        if (window.location.href.toString() !== url) {\r\n            window.location.href = url;\r\n        } else {\r\n            window.location.href = \"https://discord.com/api/oauth2/authorize?client_id=1043950277738385499&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fdashboard&response_type=token&scope=identify%20guilds\";    \r\n        }\r\n    }\r\n\r\n    return (\r\n        <body>\r\n            <nav>\r\n                <div className='logoNav'>\r\n                    \r\n                    <motion.a\r\n                    href='index'\r\n                    whileHover={{scale: 1.1}}\r\n                    whileTap={{scale: 0.9}}\r\n                    ><img className='round' alt='' src={logo} width=\"150px\" height=\"150px\" ></img>\r\n                    </motion.a>\r\n                    \r\n                    <motion.button\r\n                    whileHover={{scale: 1.1}}\r\n                    whileTap={{scale: 0.9}}\r\n                    className='indexBtn' \r\n                    id=\"loginButton\"\r\n                    onClick={loginclick}\r\n                    >Login</motion.button>  \r\n                     \r\n                </div>   \r\n            </nav>\r\n            <br/>\r\n\r\n            <main id=\"content\"><span className=\"middle\">Nothing to Display. Please Login.</span></main>\r\n\r\n        </body>\r\n);\r\n\r\n}\r\n\r\nfunction load() {\r\n\r\n    if (window.location.href.toString() !== url) {\r\n                        \r\n        //get the url\r\n        let url = document.URL;\r\n\r\n        //split the url in the terms we need\r\n        const split = url.split(\"=\");\r\n        const split2 = split[1].split(\"&\");\r\n        const split3 = split[2].split(\"&\");\r\n\r\n        //order the tokens their content\r\n        token_type = split2[0];\r\n        access_token = split3[0];\r\n        \r\n        //go with the token and token type to the Discordapi\r\n        fetch('https://discord.com/api/users/@me', {\r\n        headers: {\r\n        authorization: `${token_type} ${access_token}`,\r\n        },\r\n        })\r\n        .then(result => result.json())\r\n        .then(response => {\r\n\r\n            clearContent();\r\n\r\n            const {id, username, avatar ,discriminator} = response;\r\n\r\n            //give the build controller the data from the Api after asking for a cookie\r\n            buildController(id, username, avatar ,discriminator);  \r\n           \r\n        })\r\n        .catch(console.error); \r\n    \r\n    } else {\r\n        //write that we are not able to use the dashboard because we are loged in\r\n        document.getElementById(\"content\").innerHTML=\"Login to use the Dashboard\";\r\n        document.getElementById(\"content\").className = \"middle\";\r\n    }\r\n}    \r\n\r\nfunction buildController(id, username, avatar ,discriminator) {\r\n\r\n    //go the div where we write in\r\n    let middleText = document.querySelector(\"body\");\r\n\r\n    // create the welcome in an h1\r\n    let h1 = document.createElement(\"h1\"); \r\n    h1.innerHTML= \"Welcome \"; \r\n\r\n    //setup the link to the discord avatar picture and create the img\r\n    let avaurl = \"https://cdn.discordapp.com/avatars/\" + id + \"/\" +  avatar + \".jpg\" ; \r\n    let img = document.createElement('img');\r\n    img.src = avaurl;\r\n    img.style.scale = \"1%\";\r\n    img.className=\"round\";\r\n\r\n    //setup the the h1 for the two spans\r\n    let h1_2 = document.createElement(\"h1\");\r\n\r\n    //create the span for the username\r\n    let span = document.createElement(\"span\");\r\n    span.innerText=username;\r\n\r\n    //create the span for the Discordtag aka discriminator\r\n    let span1 = document.createElement(\"span\");\r\n    span1.innerText=\"#\" + discriminator;\r\n\r\n    //append the childs\r\n    middleText.appendChild(h1);\r\n    middleText.appendChild(img)\r\n    h1_2.appendChild(span);\r\n    h1_2.appendChild(span1);\r\n    middleText.appendChild(h1_2)  \r\n}\r\n\r\nfunction clearContent() {\r\n    document.querySelector(\"nav\").remove();\r\n    document.querySelector(\"main\").remove();\r\n    document.querySelector(\"br\").remove();\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,0BAA0B;;AAE3C;AAAA;AACA,IAAIC,UAAU,GAAG,OAAO;AACxB,IAAIC,YAAY,GAAG,OAAO;AAC1B,IAAIC,GAAG,GAAG,iCAAiC;AAE3C,SAASC,SAAS,GAAG;EAEjBC,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAEC,IAAI,CAAC;EAErC,MAAMC,UAAU,GAAG,MAAM;IACrB,IAAIH,MAAM,CAACI,QAAQ,CAACC,IAAI,CAACC,QAAQ,EAAE,KAAKR,GAAG,EAAE;MACzCE,MAAM,CAACI,QAAQ,CAACC,IAAI,GAAGP,GAAG;IAC9B,CAAC,MAAM;MACHE,MAAM,CAACI,QAAQ,CAACC,IAAI,GAAG,2KAA2K;IACtM;EACJ,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,uBACI;QAAK,SAAS,EAAC,SAAS;QAAA,wBAEpB,QAAC,MAAM,CAAC,CAAC;UACT,IAAI,EAAC,OAAO;UACZ,UAAU,EAAE;YAACE,KAAK,EAAE;UAAG,CAAE;UACzB,QAAQ,EAAE;YAACA,KAAK,EAAE;UAAG,CAAE;UAAA,uBACtB;YAAK,SAAS,EAAC,OAAO;YAAC,GAAG,EAAC,EAAE;YAAC,GAAG,EAAEZ,IAAK;YAAC,KAAK,EAAC,OAAO;YAAC,MAAM,EAAC;UAAO;YAAA;YAAA;YAAA;UAAA;QAAQ;UAAA;UAAA;UAAA;QAAA,QACnE,eAEX,QAAC,MAAM,CAAC,MAAM;UACd,UAAU,EAAE;YAACY,KAAK,EAAE;UAAG,CAAE;UACzB,QAAQ,EAAE;YAACA,KAAK,EAAE;UAAG,CAAE;UACvB,SAAS,EAAC,UAAU;UACpB,EAAE,EAAC,aAAa;UAChB,OAAO,EAAEJ,UAAW;UAAA,UACnB;QAAK;UAAA;UAAA;UAAA;QAAA,QAAgB;MAAA;QAAA;QAAA;QAAA;MAAA;IAEpB;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAA;MAAA;MAAA;IAAA,QAAK,eAEL;MAAM,EAAE,EAAC,SAAS;MAAA,uBAAC;QAAM,SAAS,EAAC,QAAQ;QAAA,UAAC;MAAiC;QAAA;QAAA;QAAA;MAAA;IAAO;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAExF;AAGf;AAAC,KAzCQJ,SAAS;AA2ClB,SAASG,IAAI,GAAG;EAEZ,IAAIF,MAAM,CAACI,QAAQ,CAACC,IAAI,CAACC,QAAQ,EAAE,KAAKR,GAAG,EAAE;IAEzC;IACA,IAAIA,GAAG,GAAGU,QAAQ,CAACC,GAAG;;IAEtB;IACA,MAAMC,KAAK,GAAGZ,GAAG,CAACY,KAAK,CAAC,GAAG,CAAC;IAC5B,MAAMC,MAAM,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC;IAClC,MAAME,MAAM,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC;;IAElC;IACAd,UAAU,GAAGe,MAAM,CAAC,CAAC,CAAC;IACtBd,YAAY,GAAGe,MAAM,CAAC,CAAC,CAAC;;IAExB;IACAC,KAAK,CAAC,mCAAmC,EAAE;MAC3CC,OAAO,EAAE;QACTC,aAAa,EAAG,GAAEnB,UAAW,IAAGC,YAAa;MAC7C;IACA,CAAC,CAAC,CACDmB,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,EAAE,CAAC,CAC7BF,IAAI,CAACG,QAAQ,IAAI;MAEdC,YAAY,EAAE;MAEd,MAAM;QAACC,EAAE;QAAEC,QAAQ;QAAEC,MAAM;QAAEC;MAAa,CAAC,GAAGL,QAAQ;;MAEtD;MACAM,eAAe,CAACJ,EAAE,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,aAAa,CAAC;IAExD,CAAC,CAAC,CACDE,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EAEzB,CAAC,MAAM;IACH;IACApB,QAAQ,CAACqB,cAAc,CAAC,SAAS,CAAC,CAACC,SAAS,GAAC,4BAA4B;IACzEtB,QAAQ,CAACqB,cAAc,CAAC,SAAS,CAAC,CAACE,SAAS,GAAG,QAAQ;EAC3D;AACJ;AAEA,SAASN,eAAe,CAACJ,EAAE,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,aAAa,EAAE;EAE1D;EACA,IAAIQ,UAAU,GAAGxB,QAAQ,CAACyB,aAAa,CAAC,MAAM,CAAC;;EAE/C;EACA,IAAIC,EAAE,GAAG1B,QAAQ,CAAC2B,aAAa,CAAC,IAAI,CAAC;EACrCD,EAAE,CAACJ,SAAS,GAAE,UAAU;;EAExB;EACA,IAAIM,MAAM,GAAG,qCAAqC,GAAGf,EAAE,GAAG,GAAG,GAAIE,MAAM,GAAG,MAAM;EAChF,IAAIc,GAAG,GAAG7B,QAAQ,CAAC2B,aAAa,CAAC,KAAK,CAAC;EACvCE,GAAG,CAACC,GAAG,GAAGF,MAAM;EAChBC,GAAG,CAACE,KAAK,CAAChC,KAAK,GAAG,IAAI;EACtB8B,GAAG,CAACN,SAAS,GAAC,OAAO;;EAErB;EACA,IAAIS,IAAI,GAAGhC,QAAQ,CAAC2B,aAAa,CAAC,IAAI,CAAC;;EAEvC;EACA,IAAIM,IAAI,GAAGjC,QAAQ,CAAC2B,aAAa,CAAC,MAAM,CAAC;EACzCM,IAAI,CAACC,SAAS,GAACpB,QAAQ;;EAEvB;EACA,IAAIqB,KAAK,GAAGnC,QAAQ,CAAC2B,aAAa,CAAC,MAAM,CAAC;EAC1CQ,KAAK,CAACD,SAAS,GAAC,GAAG,GAAGlB,aAAa;;EAEnC;EACAQ,UAAU,CAACY,WAAW,CAACV,EAAE,CAAC;EAC1BF,UAAU,CAACY,WAAW,CAACP,GAAG,CAAC;EAC3BG,IAAI,CAACI,WAAW,CAACH,IAAI,CAAC;EACtBD,IAAI,CAACI,WAAW,CAACD,KAAK,CAAC;EACvBX,UAAU,CAACY,WAAW,CAACJ,IAAI,CAAC;AAChC;AAEA,SAASpB,YAAY,GAAG;EACpBZ,QAAQ,CAACyB,aAAa,CAAC,KAAK,CAAC,CAACY,MAAM,EAAE;EACtCrC,QAAQ,CAACyB,aAAa,CAAC,MAAM,CAAC,CAACY,MAAM,EAAE;EACvCrC,QAAQ,CAACyB,aAAa,CAAC,IAAI,CAAC,CAACY,MAAM,EAAE;AACzC;AAEA,eAAe9C,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}