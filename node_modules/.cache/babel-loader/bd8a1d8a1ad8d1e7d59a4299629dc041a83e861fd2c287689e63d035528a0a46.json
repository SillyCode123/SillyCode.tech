{"ast":null,"code":"'use strict';\n\nconst {\n  Writable\n} = require('stream');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst {\n  concat,\n  toArrayBuffer,\n  unmask\n} = require('./buffer-util');\nconst {\n  isValidStatusCode,\n  isValidUTF8\n} = require('./validation');\nconst FastBuffer = Buffer[Symbol.species];\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n    this._bufferedBytes = 0;\n    this._buffers = [];\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n    if (n === this._buffers[0].length) return this._buffers.shift();\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(buf.buffer, buf.byteOffset + n, buf.length - n);\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n    const dst = Buffer.allocUnsafe(n);\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(buf.buffer, buf.byteOffset + n, buf.length - n);\n      }\n      n -= buf.length;\n    } while (n > 0);\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n    const buf = this.consume(2);\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(RangeError, 'RSV2 and RSV3 must be clear', true, 1002, 'WS_ERR_UNEXPECTED_RSV_2_3');\n    }\n    const compressed = (buf[0] & 0x40) === 0x40;\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(RangeError, 'RSV1 must be clear', true, 1002, 'WS_ERR_UNEXPECTED_RSV_1');\n    }\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002, 'WS_ERR_UNEXPECTED_RSV_1');\n      }\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(RangeError, 'invalid opcode 0', true, 1002, 'WS_ERR_INVALID_OPCODE');\n      }\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002, 'WS_ERR_INVALID_OPCODE');\n      }\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(RangeError, 'FIN must be set', true, 1002, 'WS_ERR_EXPECTED_FIN');\n      }\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002, 'WS_ERR_UNEXPECTED_RSV_1');\n      }\n      if (this._payloadLength > 0x7d || this._opcode === 0x08 && this._payloadLength === 1) {\n        this._loop = false;\n        return error(RangeError, `invalid payload length ${this._payloadLength}`, true, 1002, 'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH');\n      }\n    } else {\n      this._loop = false;\n      return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002, 'WS_ERR_INVALID_OPCODE');\n    }\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n    if (this._isServer) {\n      if (!this._masked) {\n        this._loop = false;\n        return error(RangeError, 'MASK must be set', true, 1002, 'WS_ERR_EXPECTED_MASK');\n      }\n    } else if (this._masked) {\n      this._loop = false;\n      return error(RangeError, 'MASK must be clear', true, 1002, 'WS_ERR_UNEXPECTED_MASK');\n    }\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(RangeError, 'Unsupported WebSocket frame: payload length > 2^53 - 1', false, 1009, 'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH');\n    }\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(RangeError, 'Max payload size exceeded', false, 1009, 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH');\n      }\n    }\n    if (this._masked) this._state = GET_MASK;else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n      data = this.consume(this._payloadLength);\n      if (this._masked && (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0) {\n        unmask(data, this._mask);\n      }\n    }\n    if (this._opcode > 0x07) return this.controlMessage(data);\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(error(RangeError, 'Max payload size exceeded', false, 1009, 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'));\n        }\n        this._fragments.push(buf);\n      }\n      const er = this.dataMessage();\n      if (er) return cb(er);\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n      if (this._opcode === 2) {\n        let data;\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n        this.emit('message', data, true);\n      } else {\n        const buf = concat(fragments, messageLength);\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          this._loop = false;\n          return error(Error, 'invalid UTF-8 sequence', true, 1007, 'WS_ERR_INVALID_UTF8');\n        }\n        this.emit('message', buf, false);\n      }\n    }\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n      if (data.length === 0) {\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n        if (!isValidStatusCode(code)) {\n          return error(RangeError, `invalid status code ${code}`, true, 1002, 'WS_ERR_INVALID_CLOSE_CODE');\n        }\n        const buf = new FastBuffer(data.buffer, data.byteOffset + 2, data.length - 2);\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          return error(Error, 'invalid UTF-8 sequence', true, 1007, 'WS_ERR_INVALID_UTF8');\n        }\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n    } else {\n      this.emit('pong', data);\n    }\n    this._state = GET_INFO;\n  }\n}\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode, errorCode) {\n  const err = new ErrorCtor(prefix ? `Invalid WebSocket frame: ${message}` : message);\n  Error.captureStackTrace(err, error);\n  err.code = errorCode;\n  err[kStatusCode] = statusCode;\n  return err;\n}","map":{"version":3,"names":["Writable","require","PerMessageDeflate","BINARY_TYPES","EMPTY_BUFFER","kStatusCode","kWebSocket","concat","toArrayBuffer","unmask","isValidStatusCode","isValidUTF8","FastBuffer","Buffer","Symbol","species","GET_INFO","GET_PAYLOAD_LENGTH_16","GET_PAYLOAD_LENGTH_64","GET_MASK","GET_DATA","INFLATING","Receiver","constructor","options","_binaryType","binaryType","_extensions","extensions","_isServer","isServer","_maxPayload","maxPayload","_skipUTF8Validation","skipUTF8Validation","undefined","_bufferedBytes","_buffers","_compressed","_payloadLength","_mask","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_state","_loop","_write","chunk","encoding","cb","length","push","startLoop","consume","n","shift","buf","buffer","byteOffset","dst","allocUnsafe","offset","set","Uint8Array","err","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","error","RangeError","compressed","extensionName","haveLength","readUInt16BE","num","readUInt32BE","Math","pow","data","controlMessage","decompress","dataMessage","perMessageDeflate","er","messageLength","fragments","emit","Error","end","code","module","exports","ErrorCtor","message","prefix","statusCode","errorCode","captureStackTrace"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/node_modules/ws/lib/receiver.js"],"sourcesContent":["'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n      }\n    } else if (this._masked) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(\n              RangeError,\n              'Max payload size exceeded',\n              false,\n              1009,\n              'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n            )\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        let data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data, true);\n      } else {\n        const buf = concat(fragments, messageLength);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          this._loop = false;\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('message', buf, false);\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          return error(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n    } else {\n      this.emit('pong', data);\n    }\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode, errorCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err.code = errorCode;\n  err[kStatusCode] = statusCode;\n  return err;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}