{"ast":null,"code":"'use strict';\n\nconst {\n  EmbedBuilder: BuildersEmbed,\n  isJSONEncodable\n} = require('@discordjs/builders');\nconst {\n  toSnakeCase\n} = require('../util/Transformers');\nconst {\n  resolveColor\n} = require('../util/Util');\n\n/**\n * Represents an embed builder.\n * @extends {BuildersEmbed}\n */\nclass EmbedBuilder extends BuildersEmbed {\n  constructor(data) {\n    super(toSnakeCase(data));\n  }\n\n  /**\n   * Sets the color of this embed\n   * @param {?ColorResolvable} color The color of the embed\n   * @returns {EmbedBuilder}\n   */\n  setColor(color) {\n    return super.setColor(color && resolveColor(color));\n  }\n\n  /**\n   * Creates a new embed builder from JSON data\n   * @param {JSONEncodable<APIEmbed>|APIEmbed} other The other data\n   * @returns {EmbedBuilder}\n   */\n  static from(other) {\n    if (isJSONEncodable(other)) {\n      return new this(other.toJSON());\n    }\n    return new this(other);\n  }\n}\nmodule.exports = EmbedBuilder;\n\n/**\n * @external BuildersEmbed\n * @see {@link https://discord.js.org/#/docs/builders/main/class/EmbedBuilder}\n */","map":{"version":3,"names":["EmbedBuilder","BuildersEmbed","isJSONEncodable","require","toSnakeCase","resolveColor","constructor","data","setColor","color","from","other","toJSON","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/structures/EmbedBuilder.js"],"sourcesContent":["'use strict';\n\nconst { EmbedBuilder: BuildersEmbed, isJSONEncodable } = require('@discordjs/builders');\nconst { toSnakeCase } = require('../util/Transformers');\nconst { resolveColor } = require('../util/Util');\n\n/**\n * Represents an embed builder.\n * @extends {BuildersEmbed}\n */\nclass EmbedBuilder extends BuildersEmbed {\n  constructor(data) {\n    super(toSnakeCase(data));\n  }\n\n  /**\n   * Sets the color of this embed\n   * @param {?ColorResolvable} color The color of the embed\n   * @returns {EmbedBuilder}\n   */\n  setColor(color) {\n    return super.setColor(color && resolveColor(color));\n  }\n\n  /**\n   * Creates a new embed builder from JSON data\n   * @param {JSONEncodable<APIEmbed>|APIEmbed} other The other data\n   * @returns {EmbedBuilder}\n   */\n  static from(other) {\n    if (isJSONEncodable(other)) {\n      return new this(other.toJSON());\n    }\n    return new this(other);\n  }\n}\n\nmodule.exports = EmbedBuilder;\n\n/**\n * @external BuildersEmbed\n * @see {@link https://discord.js.org/#/docs/builders/main/class/EmbedBuilder}\n */\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA,YAAY,EAAEC,aAAa;EAAEC;AAAgB,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACvF,MAAM;EAAEC;AAAY,CAAC,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AACvD,MAAM;EAAEE;AAAa,CAAC,GAAGF,OAAO,CAAC,cAAc,CAAC;;AAEhD;AACA;AACA;AACA;AACA,MAAMH,YAAY,SAASC,aAAa,CAAC;EACvCK,WAAW,CAACC,IAAI,EAAE;IAChB,KAAK,CAACH,WAAW,CAACG,IAAI,CAAC,CAAC;EAC1B;;EAEA;AACF;AACA;AACA;AACA;EACEC,QAAQ,CAACC,KAAK,EAAE;IACd,OAAO,KAAK,CAACD,QAAQ,CAACC,KAAK,IAAIJ,YAAY,CAACI,KAAK,CAAC,CAAC;EACrD;;EAEA;AACF;AACA;AACA;AACA;EACE,OAAOC,IAAI,CAACC,KAAK,EAAE;IACjB,IAAIT,eAAe,CAACS,KAAK,CAAC,EAAE;MAC1B,OAAO,IAAI,IAAI,CAACA,KAAK,CAACC,MAAM,EAAE,CAAC;IACjC;IACA,OAAO,IAAI,IAAI,CAACD,KAAK,CAAC;EACxB;AACF;AAEAE,MAAM,CAACC,OAAO,GAAGd,YAAY;;AAE7B;AACA;AACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}