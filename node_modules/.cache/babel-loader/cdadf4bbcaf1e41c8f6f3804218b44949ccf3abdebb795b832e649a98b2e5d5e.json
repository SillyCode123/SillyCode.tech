{"ast":null,"code":"'use strict';\n\nconst {\n  embedLength\n} = require('@discordjs/builders');\nconst isEqual = require('fast-deep-equal');\n\n/**\n * Represents an embed.\n */\nclass Embed {\n  constructor(data) {\n    /**\n     * The API embed data.\n     * @type {APIEmbed}\n     * @readonly\n     */\n    this.data = {\n      ...data\n    };\n  }\n\n  /**\n   * An array of fields of this embed.\n   * @type {Array<APIEmbedField>}\n   * @readonly\n   */\n  get fields() {\n    return this.data.fields ?? [];\n  }\n\n  /**\n   * The title of this embed.\n   * @type {?string}\n   * @readonly\n   */\n  get title() {\n    return this.data.title ?? null;\n  }\n\n  /**\n   * The description of this embed.\n   * @type {?string}\n   * @readonly\n   */\n  get description() {\n    return this.data.description ?? null;\n  }\n\n  /**\n   * The URL of this embed.\n   * @type {?string}\n   * @readonly\n   */\n  get url() {\n    return this.data.url ?? null;\n  }\n\n  /**\n   * The color of this embed.\n   * @type {?number}\n   * @readonly\n   */\n  get color() {\n    return this.data.color ?? null;\n  }\n\n  /**\n   * The timestamp of this embed. This is in an ISO 8601 format.\n   * @type {?string}\n   * @readonly\n   */\n  get timestamp() {\n    return this.data.timestamp ?? null;\n  }\n\n  /**\n   * @typedef {Object} EmbedAssetData\n   * @property {?string} url The URL of the image\n   * @property {?string} proxyURL The proxy URL of the image\n   * @property {?number} height The height of the image\n   * @property {?number} width The width of the image\n   */\n\n  /**\n   * The thumbnail of this embed.\n   * @type {?EmbedAssetData}\n   * @readonly\n   */\n  get thumbnail() {\n    if (!this.data.thumbnail) return null;\n    return {\n      url: this.data.thumbnail.url,\n      proxyURL: this.data.thumbnail.proxy_url,\n      height: this.data.thumbnail.height,\n      width: this.data.thumbnail.width\n    };\n  }\n\n  /**\n   * The image of this embed.\n   * @type {?EmbedAssetData}\n   * @readonly\n   */\n  get image() {\n    if (!this.data.image) return null;\n    return {\n      url: this.data.image.url,\n      proxyURL: this.data.image.proxy_url,\n      height: this.data.image.height,\n      width: this.data.image.width\n    };\n  }\n\n  /**\n   * The video of this embed.\n   * @type {?EmbedAssetData}\n   * @readonly\n   */\n  get video() {\n    if (!this.data.video) return null;\n    return {\n      url: this.data.video.url,\n      proxyURL: this.data.video.proxy_url,\n      height: this.data.video.height,\n      width: this.data.video.width\n    };\n  }\n\n  /**\n   * @typedef {Object} EmbedAuthorData\n   * @property {string} name The name of the author\n   * @property {?string} url The URL of the author\n   * @property {?string} iconURL The icon URL of the author\n   * @property {?string} proxyIconURL The proxy icon URL of the author\n   */\n\n  /**\n   * The author of this embed.\n   * @type {?EmbedAuthorData}\n   * @readonly\n   */\n  get author() {\n    if (!this.data.author) return null;\n    return {\n      name: this.data.author.name,\n      url: this.data.author.url,\n      iconURL: this.data.author.icon_url,\n      proxyIconURL: this.data.author.proxy_icon_url\n    };\n  }\n\n  /**\n   * The provider of this embed.\n   * @type {?APIEmbedProvider}\n   * @readonly\n   */\n  get provider() {\n    return this.data.provider ?? null;\n  }\n\n  /**\n   * @typedef {Object} EmbedFooterData\n   * @property {string} text The text of the footer\n   * @property {?string} iconURL The URL of the icon\n   * @property {?string} proxyIconURL The proxy URL of the icon\n   */\n\n  /**\n   * The footer of this embed.\n   * @type {?EmbedFooterData}\n   * @readonly\n   */\n  get footer() {\n    if (!this.data.footer) return null;\n    return {\n      text: this.data.footer.text,\n      iconURL: this.data.footer.icon_url,\n      proxyIconURL: this.data.footer.proxy_icon_url\n    };\n  }\n\n  /**\n   * The accumulated length for the embed title, description, fields, footer text, and author name.\n   * @type {number}\n   * @readonly\n   */\n  get length() {\n    return embedLength(this.data);\n  }\n\n  /**\n   * The hex color of this embed.\n   * @type {?string}\n   * @readonly\n   */\n  get hexColor() {\n    return typeof this.data.color === 'number' ? `#${this.data.color.toString(16).padStart(6, '0')}` : this.data.color ?? null;\n  }\n\n  /**\n   * Returns the API-compatible JSON for this embed.\n   * @returns {APIEmbed}\n   */\n  toJSON() {\n    return {\n      ...this.data\n    };\n  }\n\n  /**\n   * Whether the given embeds are equal.\n   * @param {Embed|APIEmbed} other The embed to compare against\n   * @returns {boolean}\n   */\n  equals(other) {\n    if (other instanceof Embed) {\n      return isEqual(other.data, this.data);\n    }\n    return isEqual(other, this.data);\n  }\n}\nmodule.exports = Embed;","map":{"version":3,"names":["embedLength","require","isEqual","Embed","constructor","data","fields","title","description","url","color","timestamp","thumbnail","proxyURL","proxy_url","height","width","image","video","author","name","iconURL","icon_url","proxyIconURL","proxy_icon_url","provider","footer","text","length","hexColor","toString","padStart","toJSON","equals","other","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/structures/Embed.js"],"sourcesContent":["'use strict';\n\nconst { embedLength } = require('@discordjs/builders');\nconst isEqual = require('fast-deep-equal');\n\n/**\n * Represents an embed.\n */\nclass Embed {\n  constructor(data) {\n    /**\n     * The API embed data.\n     * @type {APIEmbed}\n     * @readonly\n     */\n    this.data = { ...data };\n  }\n\n  /**\n   * An array of fields of this embed.\n   * @type {Array<APIEmbedField>}\n   * @readonly\n   */\n  get fields() {\n    return this.data.fields ?? [];\n  }\n\n  /**\n   * The title of this embed.\n   * @type {?string}\n   * @readonly\n   */\n  get title() {\n    return this.data.title ?? null;\n  }\n\n  /**\n   * The description of this embed.\n   * @type {?string}\n   * @readonly\n   */\n  get description() {\n    return this.data.description ?? null;\n  }\n\n  /**\n   * The URL of this embed.\n   * @type {?string}\n   * @readonly\n   */\n  get url() {\n    return this.data.url ?? null;\n  }\n\n  /**\n   * The color of this embed.\n   * @type {?number}\n   * @readonly\n   */\n  get color() {\n    return this.data.color ?? null;\n  }\n\n  /**\n   * The timestamp of this embed. This is in an ISO 8601 format.\n   * @type {?string}\n   * @readonly\n   */\n  get timestamp() {\n    return this.data.timestamp ?? null;\n  }\n\n  /**\n   * @typedef {Object} EmbedAssetData\n   * @property {?string} url The URL of the image\n   * @property {?string} proxyURL The proxy URL of the image\n   * @property {?number} height The height of the image\n   * @property {?number} width The width of the image\n   */\n\n  /**\n   * The thumbnail of this embed.\n   * @type {?EmbedAssetData}\n   * @readonly\n   */\n  get thumbnail() {\n    if (!this.data.thumbnail) return null;\n    return {\n      url: this.data.thumbnail.url,\n      proxyURL: this.data.thumbnail.proxy_url,\n      height: this.data.thumbnail.height,\n      width: this.data.thumbnail.width,\n    };\n  }\n\n  /**\n   * The image of this embed.\n   * @type {?EmbedAssetData}\n   * @readonly\n   */\n  get image() {\n    if (!this.data.image) return null;\n    return {\n      url: this.data.image.url,\n      proxyURL: this.data.image.proxy_url,\n      height: this.data.image.height,\n      width: this.data.image.width,\n    };\n  }\n\n  /**\n   * The video of this embed.\n   * @type {?EmbedAssetData}\n   * @readonly\n   */\n  get video() {\n    if (!this.data.video) return null;\n    return {\n      url: this.data.video.url,\n      proxyURL: this.data.video.proxy_url,\n      height: this.data.video.height,\n      width: this.data.video.width,\n    };\n  }\n\n  /**\n   * @typedef {Object} EmbedAuthorData\n   * @property {string} name The name of the author\n   * @property {?string} url The URL of the author\n   * @property {?string} iconURL The icon URL of the author\n   * @property {?string} proxyIconURL The proxy icon URL of the author\n   */\n\n  /**\n   * The author of this embed.\n   * @type {?EmbedAuthorData}\n   * @readonly\n   */\n  get author() {\n    if (!this.data.author) return null;\n    return {\n      name: this.data.author.name,\n      url: this.data.author.url,\n      iconURL: this.data.author.icon_url,\n      proxyIconURL: this.data.author.proxy_icon_url,\n    };\n  }\n\n  /**\n   * The provider of this embed.\n   * @type {?APIEmbedProvider}\n   * @readonly\n   */\n  get provider() {\n    return this.data.provider ?? null;\n  }\n\n  /**\n   * @typedef {Object} EmbedFooterData\n   * @property {string} text The text of the footer\n   * @property {?string} iconURL The URL of the icon\n   * @property {?string} proxyIconURL The proxy URL of the icon\n   */\n\n  /**\n   * The footer of this embed.\n   * @type {?EmbedFooterData}\n   * @readonly\n   */\n  get footer() {\n    if (!this.data.footer) return null;\n    return {\n      text: this.data.footer.text,\n      iconURL: this.data.footer.icon_url,\n      proxyIconURL: this.data.footer.proxy_icon_url,\n    };\n  }\n\n  /**\n   * The accumulated length for the embed title, description, fields, footer text, and author name.\n   * @type {number}\n   * @readonly\n   */\n  get length() {\n    return embedLength(this.data);\n  }\n\n  /**\n   * The hex color of this embed.\n   * @type {?string}\n   * @readonly\n   */\n  get hexColor() {\n    return typeof this.data.color === 'number'\n      ? `#${this.data.color.toString(16).padStart(6, '0')}`\n      : this.data.color ?? null;\n  }\n\n  /**\n   * Returns the API-compatible JSON for this embed.\n   * @returns {APIEmbed}\n   */\n  toJSON() {\n    return { ...this.data };\n  }\n\n  /**\n   * Whether the given embeds are equal.\n   * @param {Embed|APIEmbed} other The embed to compare against\n   * @returns {boolean}\n   */\n  equals(other) {\n    if (other instanceof Embed) {\n      return isEqual(other.data, this.data);\n    }\n    return isEqual(other, this.data);\n  }\n}\n\nmodule.exports = Embed;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}