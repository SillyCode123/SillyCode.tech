{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\nclass GuildDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    let guild = client.guilds.cache.get(data.id);\n    if (guild) {\n      if (data.unavailable) {\n        // Guild is unavailable\n        guild.available = false;\n\n        /**\n         * Emitted whenever a guild becomes unavailable, likely due to a server outage.\n         * @event Client#guildUnavailable\n         * @param {Guild} guild The guild that has become unavailable\n         */\n        client.emit(Events.GuildUnavailable, guild);\n\n        // Stops the GuildDelete packet thinking a guild was actually deleted,\n        // handles emitting of event itself\n        return;\n      }\n      for (const channel of guild.channels.cache.values()) this.client.channels._remove(channel.id);\n      client.voice.adapters.get(data.id)?.destroy();\n\n      // Delete guild\n      client.guilds.cache.delete(guild.id);\n\n      /**\n       * Emitted whenever a guild kicks the client or the guild is deleted/left.\n       * @event Client#guildDelete\n       * @param {Guild} guild The guild that was deleted\n       */\n      client.emit(Events.GuildDelete, guild);\n    }\n  }\n}\nmodule.exports = GuildDeleteAction;","map":{"version":3,"names":["Action","require","Events","GuildDeleteAction","handle","data","client","guild","guilds","cache","get","id","unavailable","available","emit","GuildUnavailable","channel","channels","values","_remove","voice","adapters","destroy","delete","GuildDelete","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/client/actions/GuildDelete.js"],"sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    let guild = client.guilds.cache.get(data.id);\n    if (guild) {\n      if (data.unavailable) {\n        // Guild is unavailable\n        guild.available = false;\n\n        /**\n         * Emitted whenever a guild becomes unavailable, likely due to a server outage.\n         * @event Client#guildUnavailable\n         * @param {Guild} guild The guild that has become unavailable\n         */\n        client.emit(Events.GuildUnavailable, guild);\n\n        // Stops the GuildDelete packet thinking a guild was actually deleted,\n        // handles emitting of event itself\n        return;\n      }\n\n      for (const channel of guild.channels.cache.values()) this.client.channels._remove(channel.id);\n      client.voice.adapters.get(data.id)?.destroy();\n\n      // Delete guild\n      client.guilds.cache.delete(guild.id);\n\n      /**\n       * Emitted whenever a guild kicks the client or the guild is deleted/left.\n       * @event Client#guildDelete\n       * @param {Guild} guild The guild that was deleted\n       */\n      client.emit(Events.GuildDelete, guild);\n    }\n  }\n}\n\nmodule.exports = GuildDeleteAction;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,MAAMC,MAAM,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAE3C,MAAME,iBAAiB,SAASH,MAAM,CAAC;EACrCI,MAAM,CAACC,IAAI,EAAE;IACX,MAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;IAE1B,IAAIC,KAAK,GAAGD,MAAM,CAACE,MAAM,CAACC,KAAK,CAACC,GAAG,CAACL,IAAI,CAACM,EAAE,CAAC;IAC5C,IAAIJ,KAAK,EAAE;MACT,IAAIF,IAAI,CAACO,WAAW,EAAE;QACpB;QACAL,KAAK,CAACM,SAAS,GAAG,KAAK;;QAEvB;AACR;AACA;AACA;AACA;QACQP,MAAM,CAACQ,IAAI,CAACZ,MAAM,CAACa,gBAAgB,EAAER,KAAK,CAAC;;QAE3C;QACA;QACA;MACF;MAEA,KAAK,MAAMS,OAAO,IAAIT,KAAK,CAACU,QAAQ,CAACR,KAAK,CAACS,MAAM,EAAE,EAAE,IAAI,CAACZ,MAAM,CAACW,QAAQ,CAACE,OAAO,CAACH,OAAO,CAACL,EAAE,CAAC;MAC7FL,MAAM,CAACc,KAAK,CAACC,QAAQ,CAACX,GAAG,CAACL,IAAI,CAACM,EAAE,CAAC,EAAEW,OAAO,EAAE;;MAE7C;MACAhB,MAAM,CAACE,MAAM,CAACC,KAAK,CAACc,MAAM,CAAChB,KAAK,CAACI,EAAE,CAAC;;MAEpC;AACN;AACA;AACA;AACA;MACML,MAAM,CAACQ,IAAI,CAACZ,MAAM,CAACsB,WAAW,EAAEjB,KAAK,CAAC;IACxC;EACF;AACF;AAEAkB,MAAM,CAACC,OAAO,GAAGvB,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}