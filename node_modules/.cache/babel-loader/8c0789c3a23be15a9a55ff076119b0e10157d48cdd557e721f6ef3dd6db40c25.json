{"ast":null,"code":"'use strict';\n\nconst LRU = require('lru-cache');\n\n/**\n * LRU prepare cache\n *\n */\nclass LruPrepareCache {\n  #lruCache;\n  #info;\n  constructor(info, prepareCacheLength) {\n    this.#info = info;\n    this.#lruCache = new LRU({\n      max: prepareCacheLength,\n      dispose: (value, key) => value.unCache()\n    });\n  }\n  get(sql) {\n    const key = this.#info.database + '|' + sql;\n    const cachedItem = this.#lruCache.get(key);\n    if (cachedItem) {\n      return cachedItem.incrementUse();\n    }\n    return null;\n  }\n  set(sql, cache) {\n    const key = this.#info.database + '|' + sql;\n    this.#lruCache.set(key, cache);\n  }\n  toString() {\n    let keyStr = '';\n    for (const value of this.#lruCache.keys()) {\n      keyStr += '[' + value + '],';\n    }\n    if (keyStr.length > 1) keyStr = keyStr.substring(0, keyStr.length - 1);\n    return 'info{cache:' + keyStr + '}';\n  }\n  reset() {\n    this.#lruCache.clear();\n  }\n}\nmodule.exports = LruPrepareCache;","map":{"version":3,"names":["LRU","require","LruPrepareCache","lruCache","info","constructor","prepareCacheLength","max","dispose","value","key","unCache","get","sql","database","cachedItem","incrementUse","set","cache","toString","keyStr","keys","length","substring","reset","clear","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/mariadb/lib/lru-prepare-cache.js"],"sourcesContent":["'use strict';\nconst LRU = require('lru-cache');\n\n/**\n * LRU prepare cache\n *\n */\nclass LruPrepareCache {\n  #lruCache;\n  #info;\n  constructor(info, prepareCacheLength) {\n    this.#info = info;\n    this.#lruCache = new LRU({\n      max: prepareCacheLength,\n      dispose: (value, key) => value.unCache()\n    });\n  }\n\n  get(sql) {\n    const key = this.#info.database + '|' + sql;\n    const cachedItem = this.#lruCache.get(key);\n    if (cachedItem) {\n      return cachedItem.incrementUse();\n    }\n    return null;\n  }\n\n  set(sql, cache) {\n    const key = this.#info.database + '|' + sql;\n    this.#lruCache.set(key, cache);\n  }\n\n  toString() {\n    let keyStr = '';\n    for (const value of this.#lruCache.keys()) {\n      keyStr += '[' + value + '],';\n    }\n    if (keyStr.length > 1) keyStr = keyStr.substring(0, keyStr.length - 1);\n    return 'info{cache:' + keyStr + '}';\n  }\n\n  reset() {\n    this.#lruCache.clear();\n  }\n}\n\nmodule.exports = LruPrepareCache;\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,GAAG,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAEhC;AACA;AACA;AACA;AACA,MAAMC,eAAe,CAAC;EACpB,CAACC,QAAQ;EACT,CAACC,IAAI;EACLC,WAAW,CAACD,IAAI,EAAEE,kBAAkB,EAAE;IACpC,IAAI,CAAC,CAACF,IAAI,GAAGA,IAAI;IACjB,IAAI,CAAC,CAACD,QAAQ,GAAG,IAAIH,GAAG,CAAC;MACvBO,GAAG,EAAED,kBAAkB;MACvBE,OAAO,EAAE,CAACC,KAAK,EAAEC,GAAG,KAAKD,KAAK,CAACE,OAAO;IACxC,CAAC,CAAC;EACJ;EAEAC,GAAG,CAACC,GAAG,EAAE;IACP,MAAMH,GAAG,GAAG,IAAI,CAAC,CAACN,IAAI,CAACU,QAAQ,GAAG,GAAG,GAAGD,GAAG;IAC3C,MAAME,UAAU,GAAG,IAAI,CAAC,CAACZ,QAAQ,CAACS,GAAG,CAACF,GAAG,CAAC;IAC1C,IAAIK,UAAU,EAAE;MACd,OAAOA,UAAU,CAACC,YAAY,EAAE;IAClC;IACA,OAAO,IAAI;EACb;EAEAC,GAAG,CAACJ,GAAG,EAAEK,KAAK,EAAE;IACd,MAAMR,GAAG,GAAG,IAAI,CAAC,CAACN,IAAI,CAACU,QAAQ,GAAG,GAAG,GAAGD,GAAG;IAC3C,IAAI,CAAC,CAACV,QAAQ,CAACc,GAAG,CAACP,GAAG,EAAEQ,KAAK,CAAC;EAChC;EAEAC,QAAQ,GAAG;IACT,IAAIC,MAAM,GAAG,EAAE;IACf,KAAK,MAAMX,KAAK,IAAI,IAAI,CAAC,CAACN,QAAQ,CAACkB,IAAI,EAAE,EAAE;MACzCD,MAAM,IAAI,GAAG,GAAGX,KAAK,GAAG,IAAI;IAC9B;IACA,IAAIW,MAAM,CAACE,MAAM,GAAG,CAAC,EAAEF,MAAM,GAAGA,MAAM,CAACG,SAAS,CAAC,CAAC,EAAEH,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC;IACtE,OAAO,aAAa,GAAGF,MAAM,GAAG,GAAG;EACrC;EAEAI,KAAK,GAAG;IACN,IAAI,CAAC,CAACrB,QAAQ,CAACsB,KAAK,EAAE;EACxB;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGzB,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}