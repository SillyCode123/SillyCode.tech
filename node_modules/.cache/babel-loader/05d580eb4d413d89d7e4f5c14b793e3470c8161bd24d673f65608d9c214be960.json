{"ast":null,"code":"'use strict';\n\nconst Events = require('../../../util/Events');\nmodule.exports = (client, _ref) => {\n  let {\n    d: data\n  } = _ref;\n  const channel = client.channels.cache.get(data.channel_id);\n  const time = data.last_pin_timestamp ? Date.parse(data.last_pin_timestamp) : null;\n  if (channel) {\n    // Discord sends null for last_pin_timestamp if the last pinned message was removed\n    channel.lastPinTimestamp = time;\n\n    /**\n     * Emitted whenever the pins of a channel are updated. Due to the nature of the WebSocket event,\n     * not much information can be provided easily here - you need to manually check the pins yourself.\n     * @event Client#channelPinsUpdate\n     * @param {TextBasedChannels} channel The channel that the pins update occurred in\n     * @param {Date} time The time of the pins update\n     */\n    client.emit(Events.ChannelPinsUpdate, channel, time);\n  }\n};","map":{"version":3,"names":["Events","require","module","exports","client","d","data","channel","channels","cache","get","channel_id","time","last_pin_timestamp","Date","parse","lastPinTimestamp","emit","ChannelPinsUpdate"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/client/websocket/handlers/CHANNEL_PINS_UPDATE.js"],"sourcesContent":["'use strict';\n\nconst Events = require('../../../util/Events');\n\nmodule.exports = (client, { d: data }) => {\n  const channel = client.channels.cache.get(data.channel_id);\n  const time = data.last_pin_timestamp ? Date.parse(data.last_pin_timestamp) : null;\n\n  if (channel) {\n    // Discord sends null for last_pin_timestamp if the last pinned message was removed\n    channel.lastPinTimestamp = time;\n\n    /**\n     * Emitted whenever the pins of a channel are updated. Due to the nature of the WebSocket event,\n     * not much information can be provided easily here - you need to manually check the pins yourself.\n     * @event Client#channelPinsUpdate\n     * @param {TextBasedChannels} channel The channel that the pins update occurred in\n     * @param {Date} time The time of the pins update\n     */\n    client.emit(Events.ChannelPinsUpdate, channel, time);\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAE9CC,MAAM,CAACC,OAAO,GAAG,CAACC,MAAM,WAAkB;EAAA,IAAhB;IAAEC,CAAC,EAAEC;EAAK,CAAC;EACnC,MAAMC,OAAO,GAAGH,MAAM,CAACI,QAAQ,CAACC,KAAK,CAACC,GAAG,CAACJ,IAAI,CAACK,UAAU,CAAC;EAC1D,MAAMC,IAAI,GAAGN,IAAI,CAACO,kBAAkB,GAAGC,IAAI,CAACC,KAAK,CAACT,IAAI,CAACO,kBAAkB,CAAC,GAAG,IAAI;EAEjF,IAAIN,OAAO,EAAE;IACX;IACAA,OAAO,CAACS,gBAAgB,GAAGJ,IAAI;;IAE/B;AACJ;AACA;AACA;AACA;AACA;AACA;IACIR,MAAM,CAACa,IAAI,CAACjB,MAAM,CAACkB,iBAAiB,EAAEX,OAAO,EAAEK,IAAI,CAAC;EACtD;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}