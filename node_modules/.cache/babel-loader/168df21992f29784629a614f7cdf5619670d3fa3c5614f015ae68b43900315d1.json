{"ast":null,"code":"\"use strict\";\n\n/**\n * Types extracted from https://discord.com/developers/docs/topics/oauth2\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OAuth2Scopes = void 0;\nvar OAuth2Scopes;\n(function (OAuth2Scopes) {\n  /**\n   * For oauth2 bots, this puts the bot in the user's selected guild by default\n   */\n  OAuth2Scopes[\"Bot\"] = \"bot\";\n  /**\n   * Allows [/users/@me/connections](https://discord.com/developers/docs/resources/user#get-user-connections)\n   * to return linked third-party accounts\n   *\n   * See https://discord.com/developers/docs/resources/user#get-user-connections\n   */\n  OAuth2Scopes[\"Connections\"] = \"connections\";\n  /**\n   * Allows your app to see information about the user's DMs and group DMs - requires Discord approval\n   */\n  OAuth2Scopes[\"DMChannelsRead\"] = \"dm_channels.read\";\n  /**\n   * Enables [/users/@me](https://discord.com/developers/docs/resources/user#get-current-user) to return an `email`\n   *\n   * See https://discord.com/developers/docs/resources/user#get-current-user\n   */\n  OAuth2Scopes[\"Email\"] = \"email\";\n  /**\n   * Allows [/users/@me](https://discord.com/developers/docs/resources/user#get-current-user) without `email`\n   *\n   * See https://discord.com/developers/docs/resources/user#get-current-user\n   */\n  OAuth2Scopes[\"Identify\"] = \"identify\";\n  /**\n   * Allows [/users/@me/guilds](https://discord.com/developers/docs/resources/user#get-current-user-guilds)\n   * to return basic information about all of a user's guilds\n   *\n   * See https://discord.com/developers/docs/resources/user#get-current-user-guilds\n   */\n  OAuth2Scopes[\"Guilds\"] = \"guilds\";\n  /**\n   * Allows [/guilds/{guild.id}/members/{user.id}](https://discord.com/developers/docs/resources/guild#add-guild-member)\n   * to be used for joining users to a guild\n   *\n   * See https://discord.com/developers/docs/resources/guild#add-guild-member\n   */\n  OAuth2Scopes[\"GuildsJoin\"] = \"guilds.join\";\n  /**\n   * Allows /users/@me/guilds/{guild.id}/member to return a user's member information in a guild\n   *\n   * See https://discord.com/developers/docs/resources/user#get-current-user-guild-member\n   */\n  OAuth2Scopes[\"GuildsMembersRead\"] = \"guilds.members.read\";\n  /**\n   * Allows your app to join users to a group dm\n   *\n   * See https://discord.com/developers/docs/resources/channel#group-dm-add-recipient\n   */\n  OAuth2Scopes[\"GroupDMJoins\"] = \"gdm.join\";\n  /**\n   * For local rpc server api access, this allows you to read messages from all client channels\n   * (otherwise restricted to channels/guilds your app creates)\n   */\n  OAuth2Scopes[\"MessagesRead\"] = \"messages.read\";\n  /**\n   * Allows your app to update a user's connection and metadata for the app\n   */\n  OAuth2Scopes[\"RoleConnectionsWrite\"] = \"role_connections.write\";\n  /**\n   * For local rpc server access, this allows you to control a user's local Discord client - requires Discord approval\n   */\n  OAuth2Scopes[\"RPC\"] = \"rpc\";\n  /**\n   * For local rpc server api access, this allows you to receive notifications pushed out to the user - requires Discord approval\n   */\n  OAuth2Scopes[\"RPCNotificationsRead\"] = \"rpc.notifications.read\";\n  /**\n   * This generates a webhook that is returned in the oauth token response for authorization code grants\n   */\n  OAuth2Scopes[\"WebhookIncoming\"] = \"webhook.incoming\";\n  /**\n   * Allows your app to connect to voice on user's behalf and see all the voice members - requires Discord approval\n   */\n  OAuth2Scopes[\"Voice\"] = \"voice\";\n  /**\n   * Allows your app to upload/update builds for a user's applications - requires Discord approval\n   */\n  OAuth2Scopes[\"ApplicationsBuildsUpload\"] = \"applications.builds.upload\";\n  /**\n   * Allows your app to read build data for a user's applications\n   */\n  OAuth2Scopes[\"ApplicationsBuildsRead\"] = \"applications.builds.read\";\n  /**\n   * Allows your app to read and update store data (SKUs, store listings, achievements, etc.) for a user's applications\n   */\n  OAuth2Scopes[\"ApplicationsStoreUpdate\"] = \"applications.store.update\";\n  /**\n   * Allows your app to read entitlements for a user's applications\n   */\n  OAuth2Scopes[\"ApplicationsEntitlements\"] = \"applications.entitlements\";\n  /**\n   * Allows your app to know a user's friends and implicit relationships - requires Discord approval\n   */\n  OAuth2Scopes[\"RelationshipsRead\"] = \"relationships.read\";\n  /**\n   * Allows your app to fetch data from a user's \"Now Playing/Recently Played\" list - requires Discord approval\n   */\n  OAuth2Scopes[\"ActivitiesRead\"] = \"activities.read\";\n  /**\n   * Allows your app to update a user's activity - requires Discord approval (NOT REQUIRED FOR GAMESDK ACTIVITY MANAGER)\n   *\n   * See https://discord.com/developers/docs/game-sdk/activities\n   */\n  OAuth2Scopes[\"ActivitiesWrite\"] = \"activities.write\";\n  /**\n   * Allows your app to use Application Commands in a guild\n   *\n   * See https://discord.com/developers/docs/interactions/application-commands\n   */\n  OAuth2Scopes[\"ApplicationsCommands\"] = \"applications.commands\";\n  /**\n   * Allows your app to update its Application Commands via this bearer token - client credentials grant only\n   *\n   * See https://discord.com/developers/docs/interactions/application-commands\n   */\n  OAuth2Scopes[\"ApplicationsCommandsUpdate\"] = \"applications.commands.update\";\n  /**\n   * Allows your app to update permissions for its commands using a Bearer token - client credentials grant only\n   *\n   * See https://discord.com/developers/docs/interactions/application-commands\n   */\n  OAuth2Scopes[\"ApplicationCommandsPermissionsUpdate\"] = \"applications.commands.permissions.update\";\n})(OAuth2Scopes = exports.OAuth2Scopes || (exports.OAuth2Scopes = {}));","map":{"version":3,"mappings":";;AAAA;;;;;;;AAIA,IAAYA,YA+HX;AA/HD,WAAYA,YAAY;EACvB;;;EAGAA,2BAAW;EACX;;;;;;EAMAA,2CAA2B;EAC3B;;;EAGAA,mDAAmC;EACnC;;;;;EAKAA,+BAAe;EACf;;;;;EAKAA,qCAAqB;EACrB;;;;;;EAMAA,iCAAiB;EACjB;;;;;;EAMAA,0CAA0B;EAC1B;;;;;EAKAA,yDAAyC;EACzC;;;;;EAKAA,yCAAyB;EACzB;;;;EAIAA,8CAA8B;EAC9B;;;EAGAA,+DAA+C;EAC/C;;;EAGAA,2BAAW;EACX;;;EAGAA,+DAA+C;EAC/C;;;EAGAA,oDAAoC;EACpC;;;EAGAA,+BAAe;EACf;;;EAGAA,uEAAuD;EACvD;;;EAGAA,mEAAmD;EACnD;;;EAGAA,qEAAqD;EACrD;;;EAGAA,sEAAsD;EACtD;;;EAGAA,wDAAwC;EACxC;;;EAGAA,kDAAkC;EAClC;;;;;EAKAA,oDAAoC;EACpC;;;;;EAKAA,8DAA8C;EAC9C;;;;;EAKAA,2EAA2D;EAC3D;;;;;EAKAA,iGAAiF;AAClF,CAAC,EA/HWA,YAAY,GAAZC,oBAAY,KAAZA,oBAAY","names":["OAuth2Scopes","exports"],"sources":["oauth2.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}