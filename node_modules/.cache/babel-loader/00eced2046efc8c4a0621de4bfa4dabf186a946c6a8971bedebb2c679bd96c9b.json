{"ast":null,"code":"'use strict';\n\nconst Application = require('./interfaces/Application');\n\n/**\n * Represents an Integration's OAuth2 Application.\n * @extends {Application}\n */\nclass IntegrationApplication extends Application {\n  _patch(data) {\n    super._patch(data);\n    if ('bot' in data) {\n      /**\n       * The bot user for this application\n       * @type {?User}\n       */\n      this.bot = this.client.users._add(data.bot);\n    } else {\n      this.bot ??= null;\n    }\n    if ('terms_of_service_url' in data) {\n      /**\n       * The URL of the application's terms of service\n       * @type {?string}\n       */\n      this.termsOfServiceURL = data.terms_of_service_url;\n    } else {\n      this.termsOfServiceURL ??= null;\n    }\n    if ('privacy_policy_url' in data) {\n      /**\n       * The URL of the application's privacy policy\n       * @type {?string}\n       */\n      this.privacyPolicyURL = data.privacy_policy_url;\n    } else {\n      this.privacyPolicyURL ??= null;\n    }\n    if ('rpc_origins' in data) {\n      /**\n       * The Array of RPC origin URLs\n       * @type {string[]}\n       */\n      this.rpcOrigins = data.rpc_origins;\n    } else {\n      this.rpcOrigins ??= [];\n    }\n    if ('hook' in data) {\n      /**\n       * Whether the application can be default hooked by the client\n       * @type {?boolean}\n       */\n      this.hook = data.hook;\n    } else {\n      this.hook ??= null;\n    }\n    if ('cover_image' in data) {\n      /**\n       * The hash of the application's cover image\n       * @type {?string}\n       */\n      this.cover = data.cover_image;\n    } else {\n      this.cover ??= null;\n    }\n    if ('verify_key' in data) {\n      /**\n       * The hex-encoded key for verification in interactions and the GameSDK's GetTicket\n       * @type {?string}\n       */\n      this.verifyKey = data.verify_key;\n    } else {\n      this.verifyKey ??= null;\n    }\n  }\n}\nmodule.exports = IntegrationApplication;","map":{"version":3,"names":["Application","require","IntegrationApplication","_patch","data","bot","client","users","_add","termsOfServiceURL","terms_of_service_url","privacyPolicyURL","privacy_policy_url","rpcOrigins","rpc_origins","hook","cover","cover_image","verifyKey","verify_key","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/structures/IntegrationApplication.js"],"sourcesContent":["'use strict';\n\nconst Application = require('./interfaces/Application');\n\n/**\n * Represents an Integration's OAuth2 Application.\n * @extends {Application}\n */\nclass IntegrationApplication extends Application {\n  _patch(data) {\n    super._patch(data);\n\n    if ('bot' in data) {\n      /**\n       * The bot user for this application\n       * @type {?User}\n       */\n      this.bot = this.client.users._add(data.bot);\n    } else {\n      this.bot ??= null;\n    }\n\n    if ('terms_of_service_url' in data) {\n      /**\n       * The URL of the application's terms of service\n       * @type {?string}\n       */\n      this.termsOfServiceURL = data.terms_of_service_url;\n    } else {\n      this.termsOfServiceURL ??= null;\n    }\n\n    if ('privacy_policy_url' in data) {\n      /**\n       * The URL of the application's privacy policy\n       * @type {?string}\n       */\n      this.privacyPolicyURL = data.privacy_policy_url;\n    } else {\n      this.privacyPolicyURL ??= null;\n    }\n\n    if ('rpc_origins' in data) {\n      /**\n       * The Array of RPC origin URLs\n       * @type {string[]}\n       */\n      this.rpcOrigins = data.rpc_origins;\n    } else {\n      this.rpcOrigins ??= [];\n    }\n\n    if ('hook' in data) {\n      /**\n       * Whether the application can be default hooked by the client\n       * @type {?boolean}\n       */\n      this.hook = data.hook;\n    } else {\n      this.hook ??= null;\n    }\n\n    if ('cover_image' in data) {\n      /**\n       * The hash of the application's cover image\n       * @type {?string}\n       */\n      this.cover = data.cover_image;\n    } else {\n      this.cover ??= null;\n    }\n\n    if ('verify_key' in data) {\n      /**\n       * The hex-encoded key for verification in interactions and the GameSDK's GetTicket\n       * @type {?string}\n       */\n      this.verifyKey = data.verify_key;\n    } else {\n      this.verifyKey ??= null;\n    }\n  }\n}\n\nmodule.exports = IntegrationApplication;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,WAAW,GAAGC,OAAO,CAAC,0BAA0B,CAAC;;AAEvD;AACA;AACA;AACA;AACA,MAAMC,sBAAsB,SAASF,WAAW,CAAC;EAC/CG,MAAM,CAACC,IAAI,EAAE;IACX,KAAK,CAACD,MAAM,CAACC,IAAI,CAAC;IAElB,IAAI,KAAK,IAAIA,IAAI,EAAE;MACjB;AACN;AACA;AACA;MACM,IAAI,CAACC,GAAG,GAAG,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACJ,IAAI,CAACC,GAAG,CAAC;IAC7C,CAAC,MAAM;MACL,IAAI,CAACA,GAAG,KAAK,IAAI;IACnB;IAEA,IAAI,sBAAsB,IAAID,IAAI,EAAE;MAClC;AACN;AACA;AACA;MACM,IAAI,CAACK,iBAAiB,GAAGL,IAAI,CAACM,oBAAoB;IACpD,CAAC,MAAM;MACL,IAAI,CAACD,iBAAiB,KAAK,IAAI;IACjC;IAEA,IAAI,oBAAoB,IAAIL,IAAI,EAAE;MAChC;AACN;AACA;AACA;MACM,IAAI,CAACO,gBAAgB,GAAGP,IAAI,CAACQ,kBAAkB;IACjD,CAAC,MAAM;MACL,IAAI,CAACD,gBAAgB,KAAK,IAAI;IAChC;IAEA,IAAI,aAAa,IAAIP,IAAI,EAAE;MACzB;AACN;AACA;AACA;MACM,IAAI,CAACS,UAAU,GAAGT,IAAI,CAACU,WAAW;IACpC,CAAC,MAAM;MACL,IAAI,CAACD,UAAU,KAAK,EAAE;IACxB;IAEA,IAAI,MAAM,IAAIT,IAAI,EAAE;MAClB;AACN;AACA;AACA;MACM,IAAI,CAACW,IAAI,GAAGX,IAAI,CAACW,IAAI;IACvB,CAAC,MAAM;MACL,IAAI,CAACA,IAAI,KAAK,IAAI;IACpB;IAEA,IAAI,aAAa,IAAIX,IAAI,EAAE;MACzB;AACN;AACA;AACA;MACM,IAAI,CAACY,KAAK,GAAGZ,IAAI,CAACa,WAAW;IAC/B,CAAC,MAAM;MACL,IAAI,CAACD,KAAK,KAAK,IAAI;IACrB;IAEA,IAAI,YAAY,IAAIZ,IAAI,EAAE;MACxB;AACN;AACA;AACA;MACM,IAAI,CAACc,SAAS,GAAGd,IAAI,CAACe,UAAU;IAClC,CAAC,MAAM;MACL,IAAI,CAACD,SAAS,KAAK,IAAI;IACzB;EACF;AACF;AAEAE,MAAM,CAACC,OAAO,GAAGnB,sBAAsB"},"metadata":{},"sourceType":"script","externalDependencies":[]}