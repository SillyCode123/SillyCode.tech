{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\nclass ThreadMemberUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    // Discord sends the thread id as id in this object\n    const thread = client.channels.cache.get(data.id);\n    if (thread) {\n      const member = thread.members.cache.get(data.user_id);\n      if (!member) {\n        const newMember = thread.members._add(data);\n        return {\n          newMember\n        };\n      }\n      const old = member._update(data);\n      /**\n       * Emitted whenever the client user's thread member is updated.\n       * @event Client#threadMemberUpdate\n       * @param {ThreadMember} oldMember The member before the update\n       * @param {ThreadMember} newMember The member after the update\n       */\n      client.emit(Events.ThreadMemberUpdate, old, member);\n    }\n    return {};\n  }\n}\nmodule.exports = ThreadMemberUpdateAction;","map":{"version":3,"names":["Action","require","Events","ThreadMemberUpdateAction","handle","data","client","thread","channels","cache","get","id","member","members","user_id","newMember","_add","old","_update","emit","ThreadMemberUpdate","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/client/actions/ThreadMemberUpdate.js"],"sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass ThreadMemberUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    // Discord sends the thread id as id in this object\n    const thread = client.channels.cache.get(data.id);\n    if (thread) {\n      const member = thread.members.cache.get(data.user_id);\n      if (!member) {\n        const newMember = thread.members._add(data);\n        return { newMember };\n      }\n      const old = member._update(data);\n      /**\n       * Emitted whenever the client user's thread member is updated.\n       * @event Client#threadMemberUpdate\n       * @param {ThreadMember} oldMember The member before the update\n       * @param {ThreadMember} newMember The member after the update\n       */\n      client.emit(Events.ThreadMemberUpdate, old, member);\n    }\n    return {};\n  }\n}\n\nmodule.exports = ThreadMemberUpdateAction;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,MAAMC,MAAM,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAE3C,MAAME,wBAAwB,SAASH,MAAM,CAAC;EAC5CI,MAAM,CAACC,IAAI,EAAE;IACX,MAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B;IACA,MAAMC,MAAM,GAAGD,MAAM,CAACE,QAAQ,CAACC,KAAK,CAACC,GAAG,CAACL,IAAI,CAACM,EAAE,CAAC;IACjD,IAAIJ,MAAM,EAAE;MACV,MAAMK,MAAM,GAAGL,MAAM,CAACM,OAAO,CAACJ,KAAK,CAACC,GAAG,CAACL,IAAI,CAACS,OAAO,CAAC;MACrD,IAAI,CAACF,MAAM,EAAE;QACX,MAAMG,SAAS,GAAGR,MAAM,CAACM,OAAO,CAACG,IAAI,CAACX,IAAI,CAAC;QAC3C,OAAO;UAAEU;QAAU,CAAC;MACtB;MACA,MAAME,GAAG,GAAGL,MAAM,CAACM,OAAO,CAACb,IAAI,CAAC;MAChC;AACN;AACA;AACA;AACA;AACA;MACMC,MAAM,CAACa,IAAI,CAACjB,MAAM,CAACkB,kBAAkB,EAAEH,GAAG,EAAEL,MAAM,CAAC;IACrD;IACA,OAAO,CAAC,CAAC;EACX;AACF;AAEAS,MAAM,CAACC,OAAO,GAAGnB,wBAAwB"},"metadata":{},"sourceType":"script","externalDependencies":[]}