{"ast":null,"code":"'use strict';\n\nconst {\n  Collection\n} = require('@discordjs/collection');\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\nclass MessageDeleteBulkAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n    if (channel) {\n      if (!channel.isTextBased()) return {};\n      if (channel.isThread()) channel.messageCount -= data.ids.length;\n      const ids = data.ids;\n      const messages = new Collection();\n      for (const id of ids) {\n        const message = this.getMessage({\n          id,\n          guild_id: data.guild_id\n        }, channel, false);\n        if (message) {\n          messages.set(message.id, message);\n          channel.messages.cache.delete(id);\n        }\n      }\n\n      /**\n       * Emitted whenever messages are deleted in bulk.\n       * @event Client#messageDeleteBulk\n       * @param {Collection<Snowflake, Message>} messages The deleted messages, mapped by their id\n       * @param {GuildTextBasedChannel} channel The channel that the messages were deleted in\n       */\n      if (messages.size > 0) client.emit(Events.MessageBulkDelete, messages, channel);\n      return {\n        messages\n      };\n    }\n    return {};\n  }\n}\nmodule.exports = MessageDeleteBulkAction;","map":{"version":3,"names":["Collection","require","Action","Events","MessageDeleteBulkAction","handle","data","client","channel","channels","cache","get","channel_id","isTextBased","isThread","messageCount","ids","length","messages","id","message","getMessage","guild_id","set","delete","size","emit","MessageBulkDelete","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/client/actions/MessageDeleteBulk.js"],"sourcesContent":["'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass MessageDeleteBulkAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n\n    if (channel) {\n      if (!channel.isTextBased()) return {};\n\n      if (channel.isThread()) channel.messageCount -= data.ids.length;\n\n      const ids = data.ids;\n      const messages = new Collection();\n      for (const id of ids) {\n        const message = this.getMessage(\n          {\n            id,\n            guild_id: data.guild_id,\n          },\n          channel,\n          false,\n        );\n        if (message) {\n          messages.set(message.id, message);\n          channel.messages.cache.delete(id);\n        }\n      }\n\n      /**\n       * Emitted whenever messages are deleted in bulk.\n       * @event Client#messageDeleteBulk\n       * @param {Collection<Snowflake, Message>} messages The deleted messages, mapped by their id\n       * @param {GuildTextBasedChannel} channel The channel that the messages were deleted in\n       */\n      if (messages.size > 0) client.emit(Events.MessageBulkDelete, messages, channel);\n      return { messages };\n    }\n    return {};\n  }\n}\n\nmodule.exports = MessageDeleteBulkAction;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAW,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACvD,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAU,CAAC;AAClC,MAAME,MAAM,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAE3C,MAAMG,uBAAuB,SAASF,MAAM,CAAC;EAC3CG,MAAM,CAACC,IAAI,EAAE;IACX,MAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMC,OAAO,GAAGD,MAAM,CAACE,QAAQ,CAACC,KAAK,CAACC,GAAG,CAACL,IAAI,CAACM,UAAU,CAAC;IAE1D,IAAIJ,OAAO,EAAE;MACX,IAAI,CAACA,OAAO,CAACK,WAAW,EAAE,EAAE,OAAO,CAAC,CAAC;MAErC,IAAIL,OAAO,CAACM,QAAQ,EAAE,EAAEN,OAAO,CAACO,YAAY,IAAIT,IAAI,CAACU,GAAG,CAACC,MAAM;MAE/D,MAAMD,GAAG,GAAGV,IAAI,CAACU,GAAG;MACpB,MAAME,QAAQ,GAAG,IAAIlB,UAAU,EAAE;MACjC,KAAK,MAAMmB,EAAE,IAAIH,GAAG,EAAE;QACpB,MAAMI,OAAO,GAAG,IAAI,CAACC,UAAU,CAC7B;UACEF,EAAE;UACFG,QAAQ,EAAEhB,IAAI,CAACgB;QACjB,CAAC,EACDd,OAAO,EACP,KAAK,CACN;QACD,IAAIY,OAAO,EAAE;UACXF,QAAQ,CAACK,GAAG,CAACH,OAAO,CAACD,EAAE,EAAEC,OAAO,CAAC;UACjCZ,OAAO,CAACU,QAAQ,CAACR,KAAK,CAACc,MAAM,CAACL,EAAE,CAAC;QACnC;MACF;;MAEA;AACN;AACA;AACA;AACA;AACA;MACM,IAAID,QAAQ,CAACO,IAAI,GAAG,CAAC,EAAElB,MAAM,CAACmB,IAAI,CAACvB,MAAM,CAACwB,iBAAiB,EAAET,QAAQ,EAAEV,OAAO,CAAC;MAC/E,OAAO;QAAEU;MAAS,CAAC;IACrB;IACA,OAAO,CAAC,CAAC;EACX;AACF;AAEAU,MAAM,CAACC,OAAO,GAAGzB,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}