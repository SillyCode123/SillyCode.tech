{"ast":null,"code":"'use strict';\n\nconst {\n  Collection\n} = require('@discordjs/collection');\nconst MessageComponentInteraction = require('./MessageComponentInteraction');\nconst Events = require('../util/Events');\n\n/**\n * Represents a {@link ComponentType.MentionableSelect} select menu interaction.\n * @extends {MessageComponentInteraction}\n */\nclass MentionableSelectMenuInteraction extends MessageComponentInteraction {\n  constructor(client, data) {\n    super(client, data);\n    const {\n      resolved,\n      values\n    } = data.data;\n    const {\n      members,\n      users,\n      roles\n    } = resolved ?? {};\n\n    /**\n     * An array of the selected user and role ids\n     * @type {Snowflake[]}\n     */\n    this.values = values ?? [];\n\n    /**\n     * Collection of the selected users\n     * @type {Collection<Snowflake, User>}\n     */\n    this.users = new Collection();\n\n    /**\n     * Collection of the selected users\n     * @type {Collection<Snowflake, GuildMember|APIGuildMember>}\n     */\n    this.members = new Collection();\n\n    /**\n     * Collection of the selected roles\n     * @type {Collection<Snowflake, Role|APIRole>}\n     */\n    this.roles = new Collection();\n    if (members) {\n      for (const [id, member] of Object.entries(members)) {\n        const user = users[id];\n        if (!user) {\n          this.client.emit(Events.Debug, `[MentionableSelectMenuInteraction] Received a member without a user, skipping ${id}`);\n          continue;\n        }\n        this.members.set(id, this.guild?.members._add({\n          user,\n          ...member\n        }) ?? {\n          user,\n          ...member\n        });\n      }\n    }\n    if (users) {\n      for (const user of Object.values(users)) {\n        this.users.set(user.id, this.client.users._add(user));\n      }\n    }\n    if (roles) {\n      for (const role of Object.values(roles)) {\n        this.roles.set(role.id, this.guild?.roles._add(role) ?? role);\n      }\n    }\n  }\n}\nmodule.exports = MentionableSelectMenuInteraction;","map":{"version":3,"names":["Collection","require","MessageComponentInteraction","Events","MentionableSelectMenuInteraction","constructor","client","data","resolved","values","members","users","roles","id","member","Object","entries","user","emit","Debug","set","guild","_add","role","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/structures/MentionableSelectMenuInteraction.js"],"sourcesContent":["'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst MessageComponentInteraction = require('./MessageComponentInteraction');\nconst Events = require('../util/Events');\n\n/**\n * Represents a {@link ComponentType.MentionableSelect} select menu interaction.\n * @extends {MessageComponentInteraction}\n */\nclass MentionableSelectMenuInteraction extends MessageComponentInteraction {\n  constructor(client, data) {\n    super(client, data);\n    const { resolved, values } = data.data;\n    const { members, users, roles } = resolved ?? {};\n\n    /**\n     * An array of the selected user and role ids\n     * @type {Snowflake[]}\n     */\n    this.values = values ?? [];\n\n    /**\n     * Collection of the selected users\n     * @type {Collection<Snowflake, User>}\n     */\n    this.users = new Collection();\n\n    /**\n     * Collection of the selected users\n     * @type {Collection<Snowflake, GuildMember|APIGuildMember>}\n     */\n    this.members = new Collection();\n\n    /**\n     * Collection of the selected roles\n     * @type {Collection<Snowflake, Role|APIRole>}\n     */\n    this.roles = new Collection();\n\n    if (members) {\n      for (const [id, member] of Object.entries(members)) {\n        const user = users[id];\n        if (!user) {\n          this.client.emit(\n            Events.Debug,\n            `[MentionableSelectMenuInteraction] Received a member without a user, skipping ${id}`,\n          );\n\n          continue;\n        }\n\n        this.members.set(id, this.guild?.members._add({ user, ...member }) ?? { user, ...member });\n      }\n    }\n\n    if (users) {\n      for (const user of Object.values(users)) {\n        this.users.set(user.id, this.client.users._add(user));\n      }\n    }\n\n    if (roles) {\n      for (const role of Object.values(roles)) {\n        this.roles.set(role.id, this.guild?.roles._add(role) ?? role);\n      }\n    }\n  }\n}\n\nmodule.exports = MentionableSelectMenuInteraction;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAW,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACvD,MAAMC,2BAA2B,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AAC5E,MAAME,MAAM,GAAGF,OAAO,CAAC,gBAAgB,CAAC;;AAExC;AACA;AACA;AACA;AACA,MAAMG,gCAAgC,SAASF,2BAA2B,CAAC;EACzEG,WAAW,CAACC,MAAM,EAAEC,IAAI,EAAE;IACxB,KAAK,CAACD,MAAM,EAAEC,IAAI,CAAC;IACnB,MAAM;MAAEC,QAAQ;MAAEC;IAAO,CAAC,GAAGF,IAAI,CAACA,IAAI;IACtC,MAAM;MAAEG,OAAO;MAAEC,KAAK;MAAEC;IAAM,CAAC,GAAGJ,QAAQ,IAAI,CAAC,CAAC;;IAEhD;AACJ;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAGA,MAAM,IAAI,EAAE;;IAE1B;AACJ;AACA;AACA;IACI,IAAI,CAACE,KAAK,GAAG,IAAIX,UAAU,EAAE;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACU,OAAO,GAAG,IAAIV,UAAU,EAAE;;IAE/B;AACJ;AACA;AACA;IACI,IAAI,CAACY,KAAK,GAAG,IAAIZ,UAAU,EAAE;IAE7B,IAAIU,OAAO,EAAE;MACX,KAAK,MAAM,CAACG,EAAE,EAAEC,MAAM,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACN,OAAO,CAAC,EAAE;QAClD,MAAMO,IAAI,GAAGN,KAAK,CAACE,EAAE,CAAC;QACtB,IAAI,CAACI,IAAI,EAAE;UACT,IAAI,CAACX,MAAM,CAACY,IAAI,CACdf,MAAM,CAACgB,KAAK,EACX,iFAAgFN,EAAG,EAAC,CACtF;UAED;QACF;QAEA,IAAI,CAACH,OAAO,CAACU,GAAG,CAACP,EAAE,EAAE,IAAI,CAACQ,KAAK,EAAEX,OAAO,CAACY,IAAI,CAAC;UAAEL,IAAI;UAAE,GAAGH;QAAO,CAAC,CAAC,IAAI;UAAEG,IAAI;UAAE,GAAGH;QAAO,CAAC,CAAC;MAC5F;IACF;IAEA,IAAIH,KAAK,EAAE;MACT,KAAK,MAAMM,IAAI,IAAIF,MAAM,CAACN,MAAM,CAACE,KAAK,CAAC,EAAE;QACvC,IAAI,CAACA,KAAK,CAACS,GAAG,CAACH,IAAI,CAACJ,EAAE,EAAE,IAAI,CAACP,MAAM,CAACK,KAAK,CAACW,IAAI,CAACL,IAAI,CAAC,CAAC;MACvD;IACF;IAEA,IAAIL,KAAK,EAAE;MACT,KAAK,MAAMW,IAAI,IAAIR,MAAM,CAACN,MAAM,CAACG,KAAK,CAAC,EAAE;QACvC,IAAI,CAACA,KAAK,CAACQ,GAAG,CAACG,IAAI,CAACV,EAAE,EAAE,IAAI,CAACQ,KAAK,EAAET,KAAK,CAACU,IAAI,CAACC,IAAI,CAAC,IAAIA,IAAI,CAAC;MAC/D;IACF;EACF;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGrB,gCAAgC"},"metadata":{},"sourceType":"script","externalDependencies":[]}