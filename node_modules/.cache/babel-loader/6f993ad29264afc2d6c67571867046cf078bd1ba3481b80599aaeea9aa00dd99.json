{"ast":null,"code":"'use strict';\n\nconst Base = require('./Base');\n\n/**\n * Represents a Client OAuth2 Application Team Member.\n * @extends {Base}\n */\nclass TeamMember extends Base {\n  constructor(team, data) {\n    super(team.client);\n\n    /**\n     * The Team this member is part of\n     * @type {Team}\n     */\n    this.team = team;\n    this._patch(data);\n  }\n  _patch(data) {\n    if ('permissions' in data) {\n      /**\n       * The permissions this Team Member has with regard to the team\n       * @type {string[]}\n       */\n      this.permissions = data.permissions;\n    }\n    if ('membership_state' in data) {\n      /**\n       * The permissions this Team Member has with regard to the team\n       * @type {TeamMemberMembershipState}\n       */\n      this.membershipState = data.membership_state;\n    }\n    if ('user' in data) {\n      /**\n       * The user for this Team Member\n       * @type {User}\n       */\n      this.user = this.client.users._add(data.user);\n    }\n  }\n\n  /**\n   * The Team Member's id\n   * @type {Snowflake}\n   * @readonly\n   */\n  get id() {\n    return this.user.id;\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the team member's mention instead of the\n   * TeamMember object.\n   * @returns {string}\n   * @example\n   * // Logs: Team Member's mention: <@123456789012345678>\n   * console.log(`Team Member's mention: ${teamMember}`);\n   */\n  toString() {\n    return this.user.toString();\n  }\n}\nmodule.exports = TeamMember;","map":{"version":3,"names":["Base","require","TeamMember","constructor","team","data","client","_patch","permissions","membershipState","membership_state","user","users","_add","id","toString","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/structures/TeamMember.js"],"sourcesContent":["'use strict';\n\nconst Base = require('./Base');\n\n/**\n * Represents a Client OAuth2 Application Team Member.\n * @extends {Base}\n */\nclass TeamMember extends Base {\n  constructor(team, data) {\n    super(team.client);\n\n    /**\n     * The Team this member is part of\n     * @type {Team}\n     */\n    this.team = team;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('permissions' in data) {\n      /**\n       * The permissions this Team Member has with regard to the team\n       * @type {string[]}\n       */\n      this.permissions = data.permissions;\n    }\n\n    if ('membership_state' in data) {\n      /**\n       * The permissions this Team Member has with regard to the team\n       * @type {TeamMemberMembershipState}\n       */\n      this.membershipState = data.membership_state;\n    }\n\n    if ('user' in data) {\n      /**\n       * The user for this Team Member\n       * @type {User}\n       */\n      this.user = this.client.users._add(data.user);\n    }\n  }\n\n  /**\n   * The Team Member's id\n   * @type {Snowflake}\n   * @readonly\n   */\n  get id() {\n    return this.user.id;\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the team member's mention instead of the\n   * TeamMember object.\n   * @returns {string}\n   * @example\n   * // Logs: Team Member's mention: <@123456789012345678>\n   * console.log(`Team Member's mention: ${teamMember}`);\n   */\n  toString() {\n    return this.user.toString();\n  }\n}\n\nmodule.exports = TeamMember;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA;AACA,MAAMC,UAAU,SAASF,IAAI,CAAC;EAC5BG,WAAW,CAACC,IAAI,EAAEC,IAAI,EAAE;IACtB,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC;;IAElB;AACJ;AACA;AACA;IACI,IAAI,CAACF,IAAI,GAAGA,IAAI;IAEhB,IAAI,CAACG,MAAM,CAACF,IAAI,CAAC;EACnB;EAEAE,MAAM,CAACF,IAAI,EAAE;IACX,IAAI,aAAa,IAAIA,IAAI,EAAE;MACzB;AACN;AACA;AACA;MACM,IAAI,CAACG,WAAW,GAAGH,IAAI,CAACG,WAAW;IACrC;IAEA,IAAI,kBAAkB,IAAIH,IAAI,EAAE;MAC9B;AACN;AACA;AACA;MACM,IAAI,CAACI,eAAe,GAAGJ,IAAI,CAACK,gBAAgB;IAC9C;IAEA,IAAI,MAAM,IAAIL,IAAI,EAAE;MAClB;AACN;AACA;AACA;MACM,IAAI,CAACM,IAAI,GAAG,IAAI,CAACL,MAAM,CAACM,KAAK,CAACC,IAAI,CAACR,IAAI,CAACM,IAAI,CAAC;IAC/C;EACF;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIG,EAAE,GAAG;IACP,OAAO,IAAI,CAACH,IAAI,CAACG,EAAE;EACrB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,QAAQ,GAAG;IACT,OAAO,IAAI,CAACJ,IAAI,CAACI,QAAQ,EAAE;EAC7B;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGf,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}