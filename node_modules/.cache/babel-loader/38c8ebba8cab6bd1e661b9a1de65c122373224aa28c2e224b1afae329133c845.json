{"ast":null,"code":"'use strict';\n\nconst {\n  ActionRowBuilder: BuildersActionRow,\n  isJSONEncodable\n} = require('@discordjs/builders');\nconst {\n  createComponentBuilder\n} = require('../util/Components');\nconst {\n  toSnakeCase\n} = require('../util/Transformers');\n\n/**\n * Represents an action row builder.\n * @extends {BuildersActionRow}\n */\nclass ActionRowBuilder extends BuildersActionRow {\n  constructor() {\n    let {\n      components,\n      ...data\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super({\n      ...toSnakeCase(data),\n      components: components?.map(c => createComponentBuilder(c))\n    });\n  }\n\n  /**\n   * Creates a new action row builder from JSON data\n   * @param {JSONEncodable<APIActionRowComponent<APIActionRowComponentTypes>>\n   * |APIActionRowComponent<APIActionRowComponentTypes>} other The other data\n   * @returns {ActionRowBuilder}\n   */\n  static from(other) {\n    if (isJSONEncodable(other)) {\n      return new this(other.toJSON());\n    }\n    return new this(other);\n  }\n}\nmodule.exports = ActionRowBuilder;\n\n/**\n * @external BuildersActionRow\n * @see {@link https://discord.js.org/#/docs/builders/main/class/ActionRowBuilder}\n */","map":{"version":3,"names":["ActionRowBuilder","BuildersActionRow","isJSONEncodable","require","createComponentBuilder","toSnakeCase","constructor","components","data","map","c","from","other","toJSON","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/structures/ActionRowBuilder.js"],"sourcesContent":["'use strict';\n\nconst { ActionRowBuilder: BuildersActionRow, isJSONEncodable } = require('@discordjs/builders');\nconst { createComponentBuilder } = require('../util/Components');\nconst { toSnakeCase } = require('../util/Transformers');\n\n/**\n * Represents an action row builder.\n * @extends {BuildersActionRow}\n */\nclass ActionRowBuilder extends BuildersActionRow {\n  constructor({ components, ...data } = {}) {\n    super({\n      ...toSnakeCase(data),\n      components: components?.map(c => createComponentBuilder(c)),\n    });\n  }\n\n  /**\n   * Creates a new action row builder from JSON data\n   * @param {JSONEncodable<APIActionRowComponent<APIActionRowComponentTypes>>\n   * |APIActionRowComponent<APIActionRowComponentTypes>} other The other data\n   * @returns {ActionRowBuilder}\n   */\n  static from(other) {\n    if (isJSONEncodable(other)) {\n      return new this(other.toJSON());\n    }\n    return new this(other);\n  }\n}\n\nmodule.exports = ActionRowBuilder;\n\n/**\n * @external BuildersActionRow\n * @see {@link https://discord.js.org/#/docs/builders/main/class/ActionRowBuilder}\n */\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA,gBAAgB,EAAEC,iBAAiB;EAAEC;AAAgB,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC/F,MAAM;EAAEC;AAAuB,CAAC,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAChE,MAAM;EAAEE;AAAY,CAAC,GAAGF,OAAO,CAAC,sBAAsB,CAAC;;AAEvD;AACA;AACA;AACA;AACA,MAAMH,gBAAgB,SAASC,iBAAiB,CAAC;EAC/CK,WAAW,GAA+B;IAAA,IAA9B;MAAEC,UAAU;MAAE,GAAGC;IAAK,CAAC,uEAAG,CAAC,CAAC;IACtC,KAAK,CAAC;MACJ,GAAGH,WAAW,CAACG,IAAI,CAAC;MACpBD,UAAU,EAAEA,UAAU,EAAEE,GAAG,CAACC,CAAC,IAAIN,sBAAsB,CAACM,CAAC,CAAC;IAC5D,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,OAAOC,IAAI,CAACC,KAAK,EAAE;IACjB,IAAIV,eAAe,CAACU,KAAK,CAAC,EAAE;MAC1B,OAAO,IAAI,IAAI,CAACA,KAAK,CAACC,MAAM,EAAE,CAAC;IACjC;IACA,OAAO,IAAI,IAAI,CAACD,KAAK,CAAC;EACxB;AACF;AAEAE,MAAM,CAACC,OAAO,GAAGf,gBAAgB;;AAEjC;AACA;AACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}