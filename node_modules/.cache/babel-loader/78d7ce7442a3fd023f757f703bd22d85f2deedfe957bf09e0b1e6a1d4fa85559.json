{"ast":null,"code":"var _jsxFileName = \"J:\\\\Coding\\\\Projekts\\\\Web\\\\JavaScript\\\\SillyCode.tech\\\\src\\\\pages\\\\dashboard\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport { motion } from \"framer-motion\";\nimport React from \"react\";\nimport logo from \"../../img/SillyCoder.png\";\n\n//setup the variables\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar token_type = \"empty\";\nvar access_token = \"empty\";\nvar buttonText = \"Login\";\n\n//api\nvar api = \"https://api.sillycode.tech:2020/\";\nfunction Dashboard() {\n  _s();\n  const [refresh, setRefresh] = React.useState(0);\n  const mem = () => {\n    window.location = \"/devteam\";\n  };\n  window.addEventListener(\"load\", load(setRefresh, refresh));\n  const loginclick = () => {\n    if (window.location.href.toString().includes(\"#\")) {\n      document.cookie = \"\";\n      if (window.location.href.includes(\"sillycode.tech\")) {\n        window.location.href = \"https://sillycode.tech/dashboard\";\n      } else {\n        window.location.href = \"http://localhost:3000/dashboard\";\n        console.log(\"true\");\n      }\n    } else {\n      if (window.location.href.includes(\"sillycode.tech\")) {\n        window.location.href = \"https://discord.com/api/oauth2/authorize?client_id=1043950277738385499&redirect_uri=http%3A%2F%2Fsillycode.tech%2Fdashboard&response_type=token&scope=identify%20guilds\";\n      } else if (window.location.href.includes(\"sillycode.netlify.app/\")) {\n        window.location.href = \"https://discord.com/api/oauth2/authorize?client_id=1043950277738385499&redirect_uri=https%3A%2F%2Fsillycode.netlify.app%2Fdashboard&response_type=token&scope=identify%20guilds\";\n      } else {\n        window.location.href = \"https://discord.com/api/oauth2/authorize?client_id=1043950277738385499&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fdashboard&response_type=token&scope=identify%20guilds\";\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"middle\",\n        children: \"Nothing to Display. Please Login.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Dashboard, \"uWnws/JgMpQweOVDY9aQ4NFF9Nc=\");\n_c = Dashboard;\nvar loaded = true;\nfunction load(setRefresh, refresh) {\n  if (window.location.href.toString().includes(\"#\") && loaded) {\n    loaded = false;\n    buildController();\n    setRefresh(refresh + 1);\n  }\n}\nfunction buildController() {\n  clearContent();\n  login();\n}\nfunction clearContent() {\n  try {\n    document.querySelector(\"br\").remove();\n    document.querySelector(\"span\").remove();\n  } catch (error) {}\n}\nfunction login() {\n  //get the url\n  let url = document.URL;\n\n  //split the url in the terms we need\n  const split = url.split(\"=\");\n  const split2 = split[1].split(\"&\");\n  const split3 = split[2].split(\"&\");\n\n  //order the tokens their content\n  token_type = split2[0];\n  access_token = split3[0];\n\n  //go with the token and token type to the Discordapi\n  fetch('https://discord.com/api/users/@me', {\n    headers: {\n      authorization: `${token_type} ${access_token}`\n    }\n  }).then(result => result.json()).then(response => {\n    const {\n      id,\n      username,\n      avatar,\n      discriminator\n    } = response;\n    buildHello(id, username, avatar, discriminator);\n    if (window.confirm(\"Use cookie?\")) {\n      clearContent();\n      fetch(api + '/create/cookie', {\n        headers: {\n          authorization: \"Bearer\" + process.env.REACT_APP_Token,\n          data: response + \"sss\"\n        }\n      }).then(result => result.json()).then(response => {\n        console.log(response);\n      }).catch(console.error);\n    }\n  }).catch(console.error);\n  buttonText = \"Logout\";\n}\nfunction buildHello(id, username, avatar, discriminator) {\n  clearContent();\n  document.getElementById(\"content\").style = \"padding: 2%; padding-top: 10%;\";\n\n  //go the div where we write in\n  let body = document.getElementById(\"content\");\n\n  // create the welcome in an h1\n  let h1 = document.createElement(\"h1\");\n  h1.innerHTML = \"Welcome \";\n  h1.className = \"middle\";\n\n  //setup the link to the discord avatar picture and create the img\n  let avaurl = \"https://cdn.discordapp.com/avatars/\" + id + \"/\" + avatar + \".jpg\";\n  let img = document.createElement(\"img\");\n  img.src = avaurl;\n  img.alt = \"\";\n  img.className = \"logo123\";\n\n  //create the span for the username\n  let span = document.createElement(\"span\");\n  span.innerText = \" \" + username;\n\n  //create the span for the Discordtag aka discriminator\n  let span1 = document.createElement(\"span\");\n  span1.innerText = \"#\" + discriminator;\n  let test = document.createElement(\"h1\");\n  test.innerText = \"Nothing to Display.\";\n  test.className = \"middle\";\n\n  //append the childs\n  body.appendChild(h1);\n  h1.appendChild(img);\n  h1.appendChild(span);\n  h1.appendChild(span1);\n  body.appendChild(document.createElement(\"br\"));\n  body.appendChild(test);\n}\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["motion","React","logo","token_type","access_token","buttonText","api","Dashboard","refresh","setRefresh","useState","mem","window","location","addEventListener","load","loginclick","href","toString","includes","document","cookie","console","log","loaded","buildController","clearContent","login","querySelector","remove","error","url","URL","split","split2","split3","fetch","headers","authorization","then","result","json","response","id","username","avatar","discriminator","buildHello","confirm","process","env","REACT_APP_Token","data","catch","getElementById","style","body","h1","createElement","innerHTML","className","avaurl","img","src","alt","span","innerText","span1","test","appendChild"],"sources":["J:/Coding/Projekts/Web/JavaScript/SillyCode.tech/src/pages/dashboard/dashboard.js"],"sourcesContent":["import { motion } from \"framer-motion\";\r\nimport React from \"react\";\r\nimport logo from \"../../img/SillyCoder.png\";\r\n\r\n//setup the variables\r\nvar token_type = \"empty\";\r\nvar access_token = \"empty\";\r\nvar buttonText = \"Login\"; \r\n\r\n//api\r\nvar api = \"https://api.sillycode.tech:2020/\";\r\n\r\nfunction Dashboard() {\r\n  const [refresh, setRefresh] = React.useState(0);\r\n\r\n  const mem = () => {\r\n    window.location = \"/devteam\";\r\n  };\r\n\r\n  window.addEventListener(\"load\", load(setRefresh, refresh));\r\n\r\n  const loginclick = () => {\r\n    if(window.location.href.toString().includes(\"#\")){\r\n      document.cookie = \"\";\r\n      if(window.location.href.includes(\"sillycode.tech\")){\r\n        window.location.href = \"https://sillycode.tech/dashboard\";\r\n      } else{\r\n        window.location.href = \"http://localhost:3000/dashboard\";\r\n        console.log(\"true\");\r\n      }\r\n    }  else{\r\n      if(window.location.href.includes(\"sillycode.tech\")){\r\n          window.location.href = \"https://discord.com/api/oauth2/authorize?client_id=1043950277738385499&redirect_uri=http%3A%2F%2Fsillycode.tech%2Fdashboard&response_type=token&scope=identify%20guilds\";\r\n      } else if(window.location.href.includes(\"sillycode.netlify.app/\")) {\r\n        window.location.href = \"https://discord.com/api/oauth2/authorize?client_id=1043950277738385499&redirect_uri=https%3A%2F%2Fsillycode.netlify.app%2Fdashboard&response_type=token&scope=identify%20guilds\"\r\n      }else {                                                   \r\n          window.location.href = \"https://discord.com/api/oauth2/authorize?client_id=1043950277738385499&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fdashboard&response_type=token&scope=identify%20guilds\";\r\n      }\r\n    }  \r\n  }\r\n\r\n  return (\r\n    <>\r\n       <MenuBar/>  \r\n      <br />\r\n\r\n      <main id=\"content\">\r\n        <span className=\"middle\">Nothing to Display. Please Login.</span>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nvar loaded = true;\r\n\r\nfunction load(setRefresh, refresh) {\r\n    if (window.location.href.toString().includes(\"#\") && loaded) {\r\n        loaded = false;\r\n        buildController();\r\n        setRefresh(refresh + 1);\r\n    } \r\n}    \r\n\r\nfunction buildController() {\r\n    clearContent();\r\n    login();\r\n    \r\n} \r\n\r\nfunction clearContent() {\r\n    try {\r\n        document.querySelector(\"br\").remove();\r\n        document.querySelector(\"span\").remove();\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nfunction login() {\r\n    //get the url\r\n    let url = document.URL;\r\n\r\n    //split the url in the terms we need\r\n    const split = url.split(\"=\");\r\n    const split2 = split[1].split(\"&\");\r\n    const split3 = split[2].split(\"&\");\r\n\r\n    //order the tokens their content\r\n    token_type = split2[0];\r\n    access_token = split3[0];\r\n\r\n    //go with the token and token type to the Discordapi\r\n    fetch('https://discord.com/api/users/@me', {\r\n    headers: {\r\n    authorization: `${token_type} ${access_token}`,\r\n    },\r\n    })\r\n    .then(result => result.json())\r\n    .then(response => {\r\n        const {id, username, avatar ,discriminator} = response\r\n        buildHello(id, username, avatar ,discriminator);\r\n        if(window.confirm(\"Use cookie?\")){\r\n          clearContent();\r\n          fetch(api + '/create/cookie', {\r\n              headers: {\r\n                  authorization: \"Bearer\" + process.env.REACT_APP_Token,\r\n                  data: response + \"sss\",\r\n              },\r\n          })\r\n          .then(result => result.json())\r\n          .then(response => {\r\n              console.log(response);\r\n          }).catch(console.error);\r\n        }\r\n    }).catch(console.error); \r\n\r\n    buttonText = \"Logout\";\r\n   \r\n}\r\n\r\nfunction buildHello(id, username, avatar ,discriminator) {\r\n  clearContent(); \r\n  document.getElementById(\"content\").style = \"padding: 2%; padding-top: 10%;\";\r\n\r\n  //go the div where we write in\r\n  let body = document.getElementById(\"content\");\r\n\r\n  // create the welcome in an h1\r\n  let h1 = document.createElement(\"h1\");\r\n  h1.innerHTML = \"Welcome \";\r\n  h1.className = \"middle\";\r\n\r\n  //setup the link to the discord avatar picture and create the img\r\n  let avaurl =\r\n    \"https://cdn.discordapp.com/avatars/\" + id + \"/\" + avatar + \".jpg\";\r\n  let img = document.createElement(\"img\");\r\n  img.src = avaurl;\r\n  img.alt = \"\";\r\n  img.className = \"logo123\";\r\n\r\n\r\n  //create the span for the username\r\n  let span = document.createElement(\"span\");\r\n  span.innerText = \" \" + username;\r\n\r\n  //create the span for the Discordtag aka discriminator\r\n  let span1 = document.createElement(\"span\");\r\n  span1.innerText = \"#\" + discriminator;\r\n\r\n  let test = document.createElement(\"h1\");\r\n  test.innerText = \"Nothing to Display.\";\r\n  test.className = \"middle\";\r\n\r\n  //append the childs\r\n  body.appendChild(h1);\r\n  h1.appendChild(img);\r\n  h1.appendChild(span);\r\n  h1.appendChild(span1);\r\n  body.appendChild(document.createElement(\"br\"))\r\n  body.appendChild(test);\r\n\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}