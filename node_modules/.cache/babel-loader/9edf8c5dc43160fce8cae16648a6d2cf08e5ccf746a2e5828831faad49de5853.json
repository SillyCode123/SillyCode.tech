{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\nclass GuildScheduledEventUserAddAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (guild) {\n      const guildScheduledEvent = this.getScheduledEvent(data, guild);\n      const user = this.getUser(data);\n      if (guildScheduledEvent && user) {\n        /**\n         * Emitted whenever a user subscribes to a guild scheduled event\n         * @event Client#guildScheduledEventUserAdd\n         * @param {GuildScheduledEvent} guildScheduledEvent The guild scheduled event\n         * @param {User} user The user who subscribed\n         */\n        client.emit(Events.GuildScheduledEventUserAdd, guildScheduledEvent, user);\n        return {\n          guildScheduledEvent,\n          user\n        };\n      }\n    }\n    return {};\n  }\n}\nmodule.exports = GuildScheduledEventUserAddAction;","map":{"version":3,"names":["Action","require","Events","GuildScheduledEventUserAddAction","handle","data","client","guild","guilds","cache","get","guild_id","guildScheduledEvent","getScheduledEvent","user","getUser","emit","GuildScheduledEventUserAdd","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/client/actions/GuildScheduledEventUserAdd.js"],"sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildScheduledEventUserAddAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    if (guild) {\n      const guildScheduledEvent = this.getScheduledEvent(data, guild);\n      const user = this.getUser(data);\n\n      if (guildScheduledEvent && user) {\n        /**\n         * Emitted whenever a user subscribes to a guild scheduled event\n         * @event Client#guildScheduledEventUserAdd\n         * @param {GuildScheduledEvent} guildScheduledEvent The guild scheduled event\n         * @param {User} user The user who subscribed\n         */\n        client.emit(Events.GuildScheduledEventUserAdd, guildScheduledEvent, user);\n\n        return { guildScheduledEvent, user };\n      }\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = GuildScheduledEventUserAddAction;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,MAAMC,MAAM,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAE3C,MAAME,gCAAgC,SAASH,MAAM,CAAC;EACpDI,MAAM,CAACC,IAAI,EAAE;IACX,MAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMC,KAAK,GAAGD,MAAM,CAACE,MAAM,CAACC,KAAK,CAACC,GAAG,CAACL,IAAI,CAACM,QAAQ,CAAC;IAEpD,IAAIJ,KAAK,EAAE;MACT,MAAMK,mBAAmB,GAAG,IAAI,CAACC,iBAAiB,CAACR,IAAI,EAAEE,KAAK,CAAC;MAC/D,MAAMO,IAAI,GAAG,IAAI,CAACC,OAAO,CAACV,IAAI,CAAC;MAE/B,IAAIO,mBAAmB,IAAIE,IAAI,EAAE;QAC/B;AACR;AACA;AACA;AACA;AACA;QACQR,MAAM,CAACU,IAAI,CAACd,MAAM,CAACe,0BAA0B,EAAEL,mBAAmB,EAAEE,IAAI,CAAC;QAEzE,OAAO;UAAEF,mBAAmB;UAAEE;QAAK,CAAC;MACtC;IACF;IAEA,OAAO,CAAC,CAAC;EACX;AACF;AAEAI,MAAM,CAACC,OAAO,GAAGhB,gCAAgC"},"metadata":{},"sourceType":"script","externalDependencies":[]}