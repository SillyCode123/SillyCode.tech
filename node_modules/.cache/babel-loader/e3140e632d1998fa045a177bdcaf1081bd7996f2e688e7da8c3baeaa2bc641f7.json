{"ast":null,"code":"'use strict';\n\nconst {\n  Collection\n} = require('@discordjs/collection');\nconst MessageComponentInteraction = require('./MessageComponentInteraction');\nconst Events = require('../util/Events');\n\n/**\n * Represents a {@link ComponentType.UserSelect} select menu interaction.\n * @extends {MessageComponentInteraction}\n */\nclass UserSelectMenuInteraction extends MessageComponentInteraction {\n  constructor(client, data) {\n    super(client, data);\n    const {\n      resolved,\n      values\n    } = data.data;\n\n    /**\n     * An array of the selected user ids\n     * @type {Snowflake[]}\n     */\n    this.values = values ?? [];\n\n    /**\n     * Collection of the selected users\n     * @type {Collection<Snowflake, User>}\n     */\n    this.users = new Collection();\n\n    /**\n     * Collection of the selected members\n     * @type {Collection<Snowflake, GuildMember|APIGuildMember>}\n     */\n    this.members = new Collection();\n    for (const user of Object.values(resolved?.users ?? {})) {\n      this.users.set(user.id, this.client.users._add(user));\n    }\n    for (const [id, member] of Object.entries(resolved?.members ?? {})) {\n      const user = resolved.users[id];\n      if (!user) {\n        this.client.emit(Events.Debug, `[UserSelectMenuInteraction] Received a member without a user, skipping ${id}`);\n        continue;\n      }\n      this.members.set(id, this.guild?.members._add({\n        user,\n        ...member\n      }) ?? {\n        user,\n        ...member\n      });\n    }\n  }\n}\nmodule.exports = UserSelectMenuInteraction;","map":{"version":3,"names":["Collection","require","MessageComponentInteraction","Events","UserSelectMenuInteraction","constructor","client","data","resolved","values","users","members","user","Object","set","id","_add","member","entries","emit","Debug","guild","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/structures/UserSelectMenuInteraction.js"],"sourcesContent":["'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst MessageComponentInteraction = require('./MessageComponentInteraction');\nconst Events = require('../util/Events');\n\n/**\n * Represents a {@link ComponentType.UserSelect} select menu interaction.\n * @extends {MessageComponentInteraction}\n */\nclass UserSelectMenuInteraction extends MessageComponentInteraction {\n  constructor(client, data) {\n    super(client, data);\n    const { resolved, values } = data.data;\n\n    /**\n     * An array of the selected user ids\n     * @type {Snowflake[]}\n     */\n    this.values = values ?? [];\n\n    /**\n     * Collection of the selected users\n     * @type {Collection<Snowflake, User>}\n     */\n    this.users = new Collection();\n\n    /**\n     * Collection of the selected members\n     * @type {Collection<Snowflake, GuildMember|APIGuildMember>}\n     */\n    this.members = new Collection();\n\n    for (const user of Object.values(resolved?.users ?? {})) {\n      this.users.set(user.id, this.client.users._add(user));\n    }\n\n    for (const [id, member] of Object.entries(resolved?.members ?? {})) {\n      const user = resolved.users[id];\n\n      if (!user) {\n        this.client.emit(Events.Debug, `[UserSelectMenuInteraction] Received a member without a user, skipping ${id}`);\n        continue;\n      }\n\n      this.members.set(id, this.guild?.members._add({ user, ...member }) ?? { user, ...member });\n    }\n  }\n}\n\nmodule.exports = UserSelectMenuInteraction;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAW,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACvD,MAAMC,2BAA2B,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AAC5E,MAAME,MAAM,GAAGF,OAAO,CAAC,gBAAgB,CAAC;;AAExC;AACA;AACA;AACA;AACA,MAAMG,yBAAyB,SAASF,2BAA2B,CAAC;EAClEG,WAAW,CAACC,MAAM,EAAEC,IAAI,EAAE;IACxB,KAAK,CAACD,MAAM,EAAEC,IAAI,CAAC;IACnB,MAAM;MAAEC,QAAQ;MAAEC;IAAO,CAAC,GAAGF,IAAI,CAACA,IAAI;;IAEtC;AACJ;AACA;AACA;IACI,IAAI,CAACE,MAAM,GAAGA,MAAM,IAAI,EAAE;;IAE1B;AACJ;AACA;AACA;IACI,IAAI,CAACC,KAAK,GAAG,IAAIV,UAAU,EAAE;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACW,OAAO,GAAG,IAAIX,UAAU,EAAE;IAE/B,KAAK,MAAMY,IAAI,IAAIC,MAAM,CAACJ,MAAM,CAACD,QAAQ,EAAEE,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE;MACvD,IAAI,CAACA,KAAK,CAACI,GAAG,CAACF,IAAI,CAACG,EAAE,EAAE,IAAI,CAACT,MAAM,CAACI,KAAK,CAACM,IAAI,CAACJ,IAAI,CAAC,CAAC;IACvD;IAEA,KAAK,MAAM,CAACG,EAAE,EAAEE,MAAM,CAAC,IAAIJ,MAAM,CAACK,OAAO,CAACV,QAAQ,EAAEG,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE;MAClE,MAAMC,IAAI,GAAGJ,QAAQ,CAACE,KAAK,CAACK,EAAE,CAAC;MAE/B,IAAI,CAACH,IAAI,EAAE;QACT,IAAI,CAACN,MAAM,CAACa,IAAI,CAAChB,MAAM,CAACiB,KAAK,EAAG,0EAAyEL,EAAG,EAAC,CAAC;QAC9G;MACF;MAEA,IAAI,CAACJ,OAAO,CAACG,GAAG,CAACC,EAAE,EAAE,IAAI,CAACM,KAAK,EAAEV,OAAO,CAACK,IAAI,CAAC;QAAEJ,IAAI;QAAE,GAAGK;MAAO,CAAC,CAAC,IAAI;QAAEL,IAAI;QAAE,GAAGK;MAAO,CAAC,CAAC;IAC5F;EACF;AACF;AAEAK,MAAM,CAACC,OAAO,GAAGnB,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}