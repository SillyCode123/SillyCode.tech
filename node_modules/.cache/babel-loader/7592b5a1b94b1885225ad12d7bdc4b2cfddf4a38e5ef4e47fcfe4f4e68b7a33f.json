{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\nclass AutoModerationRuleUpdateAction extends Action {\n  handle(data) {\n    const {\n      client\n    } = this;\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (guild) {\n      const oldAutoModerationRule = guild.autoModerationRules.cache.get(data.id)?._clone() ?? null;\n      const newAutoModerationRule = guild.autoModerationRules._add(data);\n\n      /**\n       * Emitted whenever an auto moderation rule gets updated.\n       * <info>This event requires the {@link PermissionFlagsBits.ManageGuild} permission.</info>\n       * @event Client#autoModerationRuleUpdate\n       * @param {?AutoModerationRule} oldAutoModerationRule The auto moderation rule before the update\n       * @param {AutoModerationRule} newAutoModerationRule The auto moderation rule after the update\n       */\n      client.emit(Events.AutoModerationRuleUpdate, oldAutoModerationRule, newAutoModerationRule);\n    }\n    return {};\n  }\n}\nmodule.exports = AutoModerationRuleUpdateAction;","map":{"version":3,"names":["Action","require","Events","AutoModerationRuleUpdateAction","handle","data","client","guild","guilds","cache","get","guild_id","oldAutoModerationRule","autoModerationRules","id","_clone","newAutoModerationRule","_add","emit","AutoModerationRuleUpdate","module","exports"],"sources":["J:/Coding/Projekts/Web/JavaScript/sillcode.tech/node_modules/discord.js/src/client/actions/AutoModerationRuleUpdate.js"],"sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass AutoModerationRuleUpdateAction extends Action {\n  handle(data) {\n    const { client } = this;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    if (guild) {\n      const oldAutoModerationRule = guild.autoModerationRules.cache.get(data.id)?._clone() ?? null;\n      const newAutoModerationRule = guild.autoModerationRules._add(data);\n\n      /**\n       * Emitted whenever an auto moderation rule gets updated.\n       * <info>This event requires the {@link PermissionFlagsBits.ManageGuild} permission.</info>\n       * @event Client#autoModerationRuleUpdate\n       * @param {?AutoModerationRule} oldAutoModerationRule The auto moderation rule before the update\n       * @param {AutoModerationRule} newAutoModerationRule The auto moderation rule after the update\n       */\n      client.emit(Events.AutoModerationRuleUpdate, oldAutoModerationRule, newAutoModerationRule);\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = AutoModerationRuleUpdateAction;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,MAAMC,MAAM,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAE3C,MAAME,8BAA8B,SAASH,MAAM,CAAC;EAClDI,MAAM,CAACC,IAAI,EAAE;IACX,MAAM;MAAEC;IAAO,CAAC,GAAG,IAAI;IACvB,MAAMC,KAAK,GAAGD,MAAM,CAACE,MAAM,CAACC,KAAK,CAACC,GAAG,CAACL,IAAI,CAACM,QAAQ,CAAC;IAEpD,IAAIJ,KAAK,EAAE;MACT,MAAMK,qBAAqB,GAAGL,KAAK,CAACM,mBAAmB,CAACJ,KAAK,CAACC,GAAG,CAACL,IAAI,CAACS,EAAE,CAAC,EAAEC,MAAM,EAAE,IAAI,IAAI;MAC5F,MAAMC,qBAAqB,GAAGT,KAAK,CAACM,mBAAmB,CAACI,IAAI,CAACZ,IAAI,CAAC;;MAElE;AACN;AACA;AACA;AACA;AACA;AACA;MACMC,MAAM,CAACY,IAAI,CAAChB,MAAM,CAACiB,wBAAwB,EAAEP,qBAAqB,EAAEI,qBAAqB,CAAC;IAC5F;IAEA,OAAO,CAAC,CAAC;EACX;AACF;AAEAI,MAAM,CAACC,OAAO,GAAGlB,8BAA8B"},"metadata":{},"sourceType":"script","externalDependencies":[]}